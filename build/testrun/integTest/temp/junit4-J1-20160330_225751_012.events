[
 "BOOTSTRAP",
 {
  "defaultCharset": "UTF-8",
  "pidString": "3330@BrijeshS-2.fios-router.home",
  "systemProperties": {
   "awt.toolkit": "sun.lwawt.macosx.LWCToolkit",
   "es.logger.level": "WARN",
   "file.encoding": "UTF-8",
   "file.encoding.pkg": "sun.io",
   "file.separator": "/",
   "ftp.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "gopherProxySet": "false",
   "http.nonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "java.awt.graphicsenv": "sun.awt.CGraphicsEnvironment",
   "java.awt.headless": "true",
   "java.awt.printerjob": "sun.lwawt.macosx.CPrinterJob",
   "java.class.path": "/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/classes/test:/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/resources/test:/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/classes/main:/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/resources/main:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-core/5.4.0-snapshot-1715952/84685d37a34b4d87e2928566ed266a7f005ca67d/lucene-core-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-analyzers-common/5.4.0-snapshot-1715952/feaf885ed4155fb7202c1f90ac2eb40503961efc/lucene-analyzers-common-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-backward-codecs/5.4.0-snapshot-1715952/5b5b5c950b4fcac38cf48fab911f75da61e780fa/lucene-backward-codecs-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-grouping/5.4.0-snapshot-1715952/ff92011208ed5c28f041acc37bd77728a89fc6a5/lucene-grouping-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-highlighter/5.4.0-snapshot-1715952/5d46f26a6cb36aede89b8728b6fcbc427d4f9416/lucene-highlighter-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-join/5.4.0-snapshot-1715952/726ea07bbfdfbfbee80522353496fc6667dc33c9/lucene-join-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-memory/5.4.0-snapshot-1715952/d8d7a7b573a4cfc54745a126e905ccfd523b7a24/lucene-memory-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-misc/5.4.0-snapshot-1715952/cd9d4fb4492bd2680cea2f038a051311329f6443/lucene-misc-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queries/5.4.0-snapshot-1715952/a1a04d191443e51f992ed3dd02d0e14fd48493c9/lucene-queries-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-queryparser/5.4.0-snapshot-1715952/c4d34b29b8b14ad3deb300a6d699e9d8965a3c2c/lucene-queryparser-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-sandbox/5.4.0-snapshot-1715952/bf45dbd653d66ce9d2c3f19b69997b8098d8b416/lucene-sandbox-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial/5.4.0-snapshot-1715952/2bddfda70f5c657064d12860b03c2cd8a5029bfc/lucene-spatial-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-spatial3d/5.4.0-snapshot-1715952/881b8cd571fb3ccdcc69f1316468d816812513fb/lucene-spatial3d-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-suggest/5.4.0-snapshot-1715952/466e2bc02f45f04cbf516e5df78b9c2ebd99e944/lucene-suggest-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.elasticsearch/securesm/1.0/c0c6cf986ba0057390bfcc80c366a0e3157f944b/securesm-1.0.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.3.1/1303efbc4b181e5a58bf2e967dc156a3132b97c0/commons-cli-1.3.1.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.carrotsearch/hppc/0.7.1/8b5057f74ea378c0150a1860874a3ebdcb713767/hppc-0.7.1.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/joda-time/joda-time/2.8.2/d27c24204c5e507b16fec01006b3d0f1ec42aed4/joda-time-2.8.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.joda/joda-convert/1.2/35ec554f0cd00c956cc69051514d9488b1374dec/joda-convert-1.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.6.2/123f29333b2c6b3516b14252b6e93226bfcd6e37/jackson-core-2.6.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-smile/2.6.2/395d18c1a1dd730b8026ee59c4067e5d2b45ba6e/jackson-dataformat-smile-2.6.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/2.6.2/4ae23088dd3fae47c66843f2e4251d7255ee140e/jackson-dataformat-yaml-2.6.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-cbor/2.6.2/1e13c575f914c83761bb8e2aca7dfd9e4c647579/jackson-dataformat-cbor-2.6.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/io.netty/netty/3.10.5.Final/9ca7d55d246092bddd29b867706e2f6c7db701a0/netty-3.10.5.Final.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.tdunning/t-digest/3.0/84ccf145ac2215e6bfa63baa3101c0af41017cfc/t-digest-3.0.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.hdrhistogram/HdrHistogram/2.1.6/7495feb7f71ee124bd2a7e7d83590e296d71d80e/HdrHistogram-2.1.6.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.spatial4j/spatial4j/0.5/6e16edaf6b1ba76db7f08c2f3723fce3b358ecc3/spatial4j-0.5.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.vividsolutions/jts/1.13/3ccfb9b60f04d71add996a666ceb8902904fd805/jts-1.13.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/log4j/log4j/1.2.17/5af35056b4d257e4b64b9e8069c0746e8b08629f/log4j-1.2.17.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/log4j/apache-log4j-extras/1.2.17/85863614d82185d7e51fe21c00aa9117a523a8b6/apache-log4j-extras-1.2.17.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/1.6.2/8619e95939167fb37245b5670135e4feb0ec7d50/slf4j-api-1.6.2.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/net.java.dev.jna/jna/4.1.0/1c12d070e602efd8021891cdd7fd18bc129372d4/jna-4.1.0.jar:/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/test-framework/build/libs/test-framework-3.0.0-SNAPSHOT.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/randomizedtesting-runner/2.2.0/60de504132241be049564a3a34fd7dcc296e2ef0/randomizedtesting-runner-2.2.0.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-all/1.3/63a21ebc981131004ad02e0434e799fd7f3a8d5a/hamcrest-all-1.3.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-test-framework/5.4.0-snapshot-1715952/ae3156d5a2526b1b48ca821765cf7cd53faecef5/lucene-test-framework-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.lucene/lucene-codecs/5.4.0-snapshot-1715952/7b94152f1c9fd7ecb384fc9602318f74a4463a65/lucene-codecs-5.4.0-snapshot-1715952.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.3.6/4c47155e3e6c9a41a28db36680b828ced53b8af4/httpclient-4.3.6.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.3.3/f91b7a4aadc5cf486df6e4634748d7dd7a73f06d/httpcore-4.3.3.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.1.3/f6f66e966c70a83ffbdb6f17a0919eaf7c8aca7f/commons-logging-1.1.3.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.10/4b95f4897fa13f2cd904aee711aeafc0c5295cd8/commons-codec-1.10.jar:/Users/brijeshs/.gradle/caches/modules-2/files-2.1/com.carrotsearch.randomizedtesting/junit4-ant/2.2.0/d401c9c729deccd5db8a5df3102eb18793c2224/junit4-ant-2.2.0.jar",
   "java.class.version": "52.0",
   "java.endorsed.dirs": "/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/endorsed",
   "java.ext.dirs": "/Users/brijeshs/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java",
   "java.home": "/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre",
   "java.io.tmpdir": "./temp",
   "java.library.path": "/Applications/NetBeans/NetBeans 8.1.app/Contents/Resources/NetBeans/webcommon/bin::/Users/brijeshs/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.",
   "java.runtime.name": "Java(TM) SE Runtime Environment",
   "java.runtime.version": "1.8.0_40-b25",
   "java.specification.name": "Java Platform API Specification",
   "java.specification.vendor": "Oracle Corporation",
   "java.specification.version": "1.8",
   "java.vendor": "Oracle Corporation",
   "java.vendor.url": "http://java.oracle.com/",
   "java.vendor.url.bug": "http://bugreport.sun.com/bugreport/",
   "java.version": "1.8.0_40",
   "java.vm.info": "mixed mode",
   "java.vm.name": "Java HotSpot(TM) 64-Bit Server VM",
   "java.vm.specification.name": "Java Virtual Machine Specification",
   "java.vm.specification.vendor": "Oracle Corporation",
   "java.vm.specification.version": "1.8",
   "java.vm.vendor": "Oracle Corporation",
   "java.vm.version": "25.40-b25",
   "junit4.childvm.count": "4",
   "junit4.childvm.cwd": "/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/testrun/integTest/J1",
   "junit4.childvm.id": "1",
   "junit4.memory.total": "514850816",
   "junit4.pidString": "3330@BrijeshS-2.fios-router.home",
   "junit4.processors": "8",
   "line.separator": "\n",
   "os.arch": "x86_64",
   "os.name": "Mac OS X",
   "os.version": "10.10.5",
   "path.separator": ":",
   "socksNonProxyHosts": "local|*.local|169.254/16|*.169.254/16",
   "sun.arch.data.model": "64",
   "sun.boot.class.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/classes",
   "sun.boot.library.path": "/Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home/jre/lib",
   "sun.cpu.endian": "little",
   "sun.cpu.isalist": "",
   "sun.io.unicode.encoding": "UnicodeBig",
   "sun.java.command": "com.carrotsearch.ant.tasks.junit4.slave.SlaveMainSafe -eventsfile /Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/testrun/integTest/temp/junit4-J1-20160330_225751_012.events @/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/testrun/integTest/temp/junit4-J1-20160330_225751_012.suites -stdin",
   "sun.java.launcher": "SUN_STANDARD",
   "sun.jnu.encoding": "UTF-8",
   "sun.management.compiler": "HotSpot 64-Bit Tiered Compilers",
   "sun.os.patch.level": "unknown",
   "tests.artifact": "core",
   "tests.ifNoTests": "fail",
   "tests.maven": "true",
   "tests.prefix": "tests",
   "tests.security.manager": "true",
   "tests.seed": "9744F55C17012246",
   "tests.task": ":core:integTest",
   "user.country": "US",
   "user.dir": "/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/testrun/integTest/J1",
   "user.home": "/Users/brijeshs",
   "user.language": "en",
   "user.name": "brijeshs",
   "user.timezone": "America/Los_Angeles"
  }
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.bwcompat.StaticIndexBackwardCompatibilityIT",
   "displayName": "org.elasticsearch.bwcompat.StaticIndexBackwardCompatibilityIT",
   "methodName": null,
   "className": "org.elasticsearch.bwcompat.StaticIndexBackwardCompatibilityIT",
   "children": []
  },
  "startTimestamp": 1459403871982
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 22:57:52,511][WARN ][org.elasticsearch.bootstrap] Unable to lock JVM Memory: error=78,reason=Function not implemented%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 22:57:52,513][WARN ][org.elasticsearch.bootstrap] This can result in part of the JVM being swapped out.%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.bwcompat.StaticIndexBackwardCompatibilityIT",
  "startTimestamp": 1459403871982,
  "executionTime": 2685
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
   "children": [
    {
     "id": "ID#testMetricAsSubAggWithInsertZeros(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testMetricAsSubAggWithInsertZeros(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testMetricAsSubAggWithInsertZeros",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    },
    {
     "id": "ID#testMetricAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testMetricAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testMetricAsSubAgg",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    },
    {
     "id": "ID#testDocCountAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testDocCountAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testDocCountAsSubAgg",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    },
    {
     "id": "ID#testNested(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testNested(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testNested",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    },
    {
     "id": "ID#testDocCountTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testDocCountTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testDocCountTopLevel",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    },
    {
     "id": "ID#testMetricTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testMetricTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testMetricTopLevel",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    },
    {
     "id": "ID#testNoBuckets(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "displayName": "testNoBuckets(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
     "methodName": "testNoBuckets",
     "className": "org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403874820
 }
]

[
 "TEST_STARTED",
 "ID#testMetricAsSubAggWithInsertZeros(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetricAsSubAggWithInsertZeros(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403899980,
  "executionTime": 1630
 }
]

[
 "TEST_STARTED",
 "ID#testMetricAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetricAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403901610,
  "executionTime": 51
 }
]

[
 "TEST_STARTED",
 "ID#testDocCountAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocCountAsSubAgg(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403901662,
  "executionTime": 44
 }
]

[
 "TEST_STARTED",
 "ID#testNested(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNested(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403901707,
  "executionTime": 69
 }
]

[
 "TEST_STARTED",
 "ID#testDocCountTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocCountTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403901777,
  "executionTime": 21
 }
]

[
 "TEST_STARTED",
 "ID#testMetricTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetricTopLevel(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403901799,
  "executionTime": 54
 }
]

[
 "TEST_STARTED",
 "ID#testNoBuckets(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNoBuckets(org.elasticsearch.search.aggregations.pipeline.AvgBucketIT)",
  "startTimestamp": 1459403901853,
  "executionTime": 337
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.AvgBucketIT",
  "startTimestamp": 1459403874820,
  "executionTime": 28733
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.SimpleClusterStateIT",
   "displayName": "org.elasticsearch.cluster.SimpleClusterStateIT",
   "methodName": null,
   "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
   "children": [
    {
     "id": "ID#testIndexTemplates(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testIndexTemplates(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testIndexTemplates",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testMetadata(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testMetadata(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testMetadata",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testNodes(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testNodes(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testNodes",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testIndicesIgnoreUnavailableFalse(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testIndicesIgnoreUnavailableFalse(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testIndicesIgnoreUnavailableFalse",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testLargeClusterStatePublishing(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testLargeClusterStatePublishing(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testLargeClusterStatePublishing",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testIndicesOptionsOnAllowNoIndicesFalse(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testIndicesOptionsOnAllowNoIndicesFalse(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testIndicesOptionsOnAllowNoIndicesFalse",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testIndicesOptions(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testIndicesOptions(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testIndicesOptions",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testThatFilteringByIndexWorksForMetadataAndRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testThatFilteringByIndexWorksForMetadataAndRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testThatFilteringByIndexWorksForMetadataAndRoutingTable",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    },
    {
     "id": "ID#testRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "displayName": "testRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)",
     "methodName": "testRoutingTable",
     "className": "org.elasticsearch.cluster.SimpleClusterStateIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403903570
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplates(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplates(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403903613,
  "executionTime": 3497
 }
]

[
 "TEST_STARTED",
 "ID#testMetadata(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMetadata(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403907110,
  "executionTime": 1771
 }
]

[
 "TEST_STARTED",
 "ID#testNodes(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNodes(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403908881,
  "executionTime": 1386
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesIgnoreUnavailableFalse(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesIgnoreUnavailableFalse(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403910267,
  "executionTime": 3076
 }
]

[
 "TEST_STARTED",
 "ID#testLargeClusterStatePublishing(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLargeClusterStatePublishing(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403913343,
  "executionTime": 3435
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesOptionsOnAllowNoIndicesFalse(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesOptionsOnAllowNoIndicesFalse(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403916778,
  "executionTime": 1429
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesOptions(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesOptions(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403918208,
  "executionTime": 1140
 }
]

[
 "TEST_STARTED",
 "ID#testThatFilteringByIndexWorksForMetadataAndRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatFilteringByIndexWorksForMetadataAndRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403919349,
  "executionTime": 1647
 }
]

[
 "TEST_STARTED",
 "ID#testRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRoutingTable(org.elasticsearch.cluster.SimpleClusterStateIT)",
  "startTimestamp": 1459403920996,
  "executionTime": 402
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.SimpleClusterStateIT",
  "startTimestamp": 1459403903570,
  "executionTime": 17843
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
   "displayName": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
   "children": [
    {
     "id": "ID#testMultiValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testMultiValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testMultiValueAggDerivative",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testDocCountDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testDocCountDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testDocCountDerivativeWithGaps",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testSingleValueAggDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testSingleValueAggDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testSingleValueAggDerivativeWithGaps_random",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testDocCountDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testDocCountDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testDocCountDerivativeWithGaps_random",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testSingleValueAggDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testSingleValueAggDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testSingleValueAggDerivativeWithGaps_insertZeros",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testPartiallyUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testPartiallyUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testPartiallyUnmapped",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testUnmapped",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testDocCountDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testDocCountDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testDocCountDerivativeWithGaps_insertZeros",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testDocCountDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testDocCountDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testDocCountDerivative",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testSingleValueAggDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testSingleValueAggDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testSingleValueAggDerivativeWithGaps",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testSingleValuedField_normalised(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testSingleValuedField_normalised(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testSingleValuedField_normalised",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testSingleValueAggDerivative_invalidPath(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testSingleValueAggDerivative_invalidPath(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testSingleValueAggDerivative_invalidPath",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    },
    {
     "id": "ID#testSingleValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "displayName": "testSingleValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
     "methodName": "testSingleValueAggDerivative",
     "className": "org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403921430
 }
]

[
 "TEST_STARTED",
 "ID#testMultiValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403922859,
  "executionTime": 136
 }
]

[
 "TEST_STARTED",
 "ID#testDocCountDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocCountDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403922995,
  "executionTime": 18
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAggDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAggDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923013,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testDocCountDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocCountDerivativeWithGaps_random(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923037,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAggDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAggDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923052,
  "executionTime": 41
 }
]

[
 "TEST_STARTED",
 "ID#testPartiallyUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPartiallyUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923094,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnmapped(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923121,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDocCountDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocCountDerivativeWithGaps_insertZeros(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923135,
  "executionTime": 14
 }
]

[
 "TEST_STARTED",
 "ID#testDocCountDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDocCountDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923149,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAggDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAggDerivativeWithGaps(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923175,
  "executionTime": 12
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValuedField_normalised(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValuedField_normalised(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923187,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAggDerivative_invalidPath(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAggDerivative_invalidPath(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923218,
  "executionTime": 40
 }
]

[
 "TEST_STARTED",
 "ID#testSingleValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleValueAggDerivative(org.elasticsearch.search.aggregations.pipeline.DerivativeIT)",
  "startTimestamp": 1459403923258,
  "executionTime": 39
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.pipeline.DerivativeIT",
  "startTimestamp": 1459403921430,
  "executionTime": 3229
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.upgrade.UpgradeIT",
   "displayName": "org.elasticsearch.action.admin.indices.upgrade.UpgradeIT",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.upgrade.UpgradeIT",
   "children": [
    {
     "id": "ID#testUpgrade(org.elasticsearch.action.admin.indices.upgrade.UpgradeIT)",
     "displayName": "testUpgrade(org.elasticsearch.action.admin.indices.upgrade.UpgradeIT)",
     "methodName": "testUpgrade",
     "className": "org.elasticsearch.action.admin.indices.upgrade.UpgradeIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403924705
 }
]

[
 "TEST_STARTED",
 "ID#testUpgrade(org.elasticsearch.action.admin.indices.upgrade.UpgradeIT)"
]

[
 "TEST_IGNORED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.action.admin.indices.upgrade.UpgradeIT)",
  "startTimestamp": 1459403924764,
  "cause": "Unknown reason for ignore status."
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testUpgrade(org.elasticsearch.action.admin.indices.upgrade.UpgradeIT)",
  "message": "'backwards' test group is disabled (@Backwards())",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'backwards' test group is disabled (@Backwards())\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.isTestIgnored(RandomizedRunner.java:1231)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:665)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$200(RandomizedRunner.java:141)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:588)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'backwards' test group is disabled (@Backwards())",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUpgrade(org.elasticsearch.action.admin.indices.upgrade.UpgradeIT)",
  "startTimestamp": 1459403924749,
  "executionTime": 51
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.upgrade.UpgradeIT",
  "startTimestamp": 1459403924705,
  "executionTime": 95
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.blocks.SimpleBlocksIT",
   "displayName": "org.elasticsearch.blocks.SimpleBlocksIT",
   "methodName": null,
   "className": "org.elasticsearch.blocks.SimpleBlocksIT",
   "children": [
    {
     "id": "ID#testVerifyIndexAndClusterReadOnly(org.elasticsearch.blocks.SimpleBlocksIT)",
     "displayName": "testVerifyIndexAndClusterReadOnly(org.elasticsearch.blocks.SimpleBlocksIT)",
     "methodName": "testVerifyIndexAndClusterReadOnly",
     "className": "org.elasticsearch.blocks.SimpleBlocksIT",
     "children": []
    },
    {
     "id": "ID#testIndexReadWriteMetaDataBlocks(org.elasticsearch.blocks.SimpleBlocksIT)",
     "displayName": "testIndexReadWriteMetaDataBlocks(org.elasticsearch.blocks.SimpleBlocksIT)",
     "methodName": "testIndexReadWriteMetaDataBlocks",
     "className": "org.elasticsearch.blocks.SimpleBlocksIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403924813
 }
]

[
 "TEST_STARTED",
 "ID#testVerifyIndexAndClusterReadOnly(org.elasticsearch.blocks.SimpleBlocksIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testVerifyIndexAndClusterReadOnly(org.elasticsearch.blocks.SimpleBlocksIT)",
  "startTimestamp": 1459403924839,
  "executionTime": 2317
 }
]

[
 "TEST_STARTED",
 "ID#testIndexReadWriteMetaDataBlocks(org.elasticsearch.blocks.SimpleBlocksIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexReadWriteMetaDataBlocks(org.elasticsearch.blocks.SimpleBlocksIT)",
  "startTimestamp": 1459403927157,
  "executionTime": 1214
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.blocks.SimpleBlocksIT",
  "startTimestamp": 1459403924813,
  "executionTime": 3583
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT",
   "displayName": "org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT",
   "children": [
    {
     "id": "ID#testDeleteIndexWithBlocks(org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT)",
     "displayName": "testDeleteIndexWithBlocks(org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT)",
     "methodName": "testDeleteIndexWithBlocks",
     "className": "org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403928408
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexWithBlocks(org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexWithBlocks(org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT)",
  "startTimestamp": 1459403928438,
  "executionTime": 1462
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.indices.delete.DeleteIndexBlocksIT",
  "startTimestamp": 1459403928408,
  "executionTime": 1512
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.index.store.ExceptionRetryIT",
   "displayName": "org.elasticsearch.index.store.ExceptionRetryIT",
   "methodName": null,
   "className": "org.elasticsearch.index.store.ExceptionRetryIT",
   "children": [
    {
     "id": "ID#testRetryDueToExceptionOnNetworkLayer(org.elasticsearch.index.store.ExceptionRetryIT)",
     "displayName": "testRetryDueToExceptionOnNetworkLayer(org.elasticsearch.index.store.ExceptionRetryIT)",
     "methodName": "testRetryDueToExceptionOnNetworkLayer",
     "className": "org.elasticsearch.index.store.ExceptionRetryIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403929932
 }
]

[
 "TEST_STARTED",
 "ID#testRetryDueToExceptionOnNetworkLayer(org.elasticsearch.index.store.ExceptionRetryIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 22:58:51,065][WARN ][org.elasticsearch.test.transport] [node_s2] Transport response handler not found of id [8]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRetryDueToExceptionOnNetworkLayer(org.elasticsearch.index.store.ExceptionRetryIT)",
  "startTimestamp": 1459403929962,
  "executionTime": 2932
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.index.store.ExceptionRetryIT",
  "startTimestamp": 1459403929932,
  "executionTime": 3002
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.percolator.RecoveryPercolatorIT",
   "displayName": "org.elasticsearch.percolator.RecoveryPercolatorIT",
   "methodName": null,
   "className": "org.elasticsearch.percolator.RecoveryPercolatorIT",
   "children": [
    {
     "id": "ID#testSinglePercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "displayName": "testSinglePercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "methodName": "testSinglePercolatorRecovery",
     "className": "org.elasticsearch.percolator.RecoveryPercolatorIT",
     "children": []
    },
    {
     "id": "ID#testRestartNodePercolator1(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "displayName": "testRestartNodePercolator1(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "methodName": "testRestartNodePercolator1",
     "className": "org.elasticsearch.percolator.RecoveryPercolatorIT",
     "children": []
    },
    {
     "id": "ID#testLoadingPercolateQueriesDuringCloseAndOpen(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "displayName": "testLoadingPercolateQueriesDuringCloseAndOpen(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "methodName": "testLoadingPercolateQueriesDuringCloseAndOpen",
     "className": "org.elasticsearch.percolator.RecoveryPercolatorIT",
     "children": []
    },
    {
     "id": "ID#testRestartNodePercolator2(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "displayName": "testRestartNodePercolator2(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "methodName": "testRestartNodePercolator2",
     "className": "org.elasticsearch.percolator.RecoveryPercolatorIT",
     "children": []
    },
    {
     "id": "ID#testMultiPercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "displayName": "testMultiPercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)",
     "methodName": "testMultiPercolatorRecovery",
     "className": "org.elasticsearch.percolator.RecoveryPercolatorIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403932948
 }
]

[
 "TEST_STARTED",
 "ID#testSinglePercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 22:58:55,328][WARN ][org.elasticsearch.test.transport] [node_t0] Transport response handler not found of id [100]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 22:59:00,184][WARN ][org.elasticsearch.test.transport] [node_t0] Transport response handler not found of id [2635]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSinglePercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)",
  "startTimestamp": 1459403932988,
  "executionTime": 12563
 }
]

[
 "TEST_STARTED",
 "ID#testRestartNodePercolator1(org.elasticsearch.percolator.RecoveryPercolatorIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestartNodePercolator1(org.elasticsearch.percolator.RecoveryPercolatorIT)",
  "startTimestamp": 1459403945551,
  "executionTime": 1155
 }
]

[
 "TEST_STARTED",
 "ID#testLoadingPercolateQueriesDuringCloseAndOpen(org.elasticsearch.percolator.RecoveryPercolatorIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLoadingPercolateQueriesDuringCloseAndOpen(org.elasticsearch.percolator.RecoveryPercolatorIT)",
  "startTimestamp": 1459403946706,
  "executionTime": 3196
 }
]

[
 "TEST_STARTED",
 "ID#testRestartNodePercolator2(org.elasticsearch.percolator.RecoveryPercolatorIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestartNodePercolator2(org.elasticsearch.percolator.RecoveryPercolatorIT)",
  "startTimestamp": 1459403949903,
  "executionTime": 780
 }
]

[
 "TEST_STARTED",
 "ID#testMultiPercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 22:59:13,834][WARN ][org.elasticsearch.test.transport] [node_t0] Transport response handler not found of id [319]%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiPercolatorRecovery(org.elasticsearch.percolator.RecoveryPercolatorIT)",
  "startTimestamp": 1459403950684,
  "executionTime": 10383
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.percolator.RecoveryPercolatorIT",
  "startTimestamp": 1459403932948,
  "executionTime": 28290
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
   "displayName": "org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
   "children": [
    {
     "id": "ID#testDoubleTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "displayName": "testDoubleTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "methodName": "testDoubleTerms",
     "className": "org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
     "children": []
    },
    {
     "id": "ID#testLongTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "displayName": "testLongTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "methodName": "testLongTerms",
     "className": "org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
     "children": []
    },
    {
     "id": "ID#testStringTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "displayName": "testStringTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "methodName": "testStringTerms",
     "className": "org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
     "children": []
    },
    {
     "id": "ID#testLongHistogram(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "displayName": "testLongHistogram(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
     "methodName": "testLongHistogram",
     "className": "org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403961251
 }
]

[
 "TEST_STARTED",
 "ID#testDoubleTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDoubleTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
  "startTimestamp": 1459403961811,
  "executionTime": 99
 }
]

[
 "TEST_STARTED",
 "ID#testLongTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
  "startTimestamp": 1459403961910,
  "executionTime": 33
 }
]

[
 "TEST_STARTED",
 "ID#testStringTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testStringTerms(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
  "startTimestamp": 1459403961943,
  "executionTime": 50
 }
]

[
 "TEST_STARTED",
 "ID#testLongHistogram(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLongHistogram(org.elasticsearch.search.aggregations.bucket.NaNSortingIT)",
  "startTimestamp": 1459403961993,
  "executionTime": 16
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.NaNSortingIT",
  "startTimestamp": 1459403961251,
  "executionTime": 923
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.ClusterStateDiffIT",
   "displayName": "org.elasticsearch.cluster.ClusterStateDiffIT",
   "methodName": null,
   "className": "org.elasticsearch.cluster.ClusterStateDiffIT",
   "children": [
    {
     "id": "ID#testClusterStateDiffSerialization(org.elasticsearch.cluster.ClusterStateDiffIT)",
     "displayName": "testClusterStateDiffSerialization(org.elasticsearch.cluster.ClusterStateDiffIT)",
     "methodName": "testClusterStateDiffSerialization",
     "className": "org.elasticsearch.cluster.ClusterStateDiffIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459403962190
 }
]

[
 "TEST_STARTED",
 "ID#testClusterStateDiffSerialization(org.elasticsearch.cluster.ClusterStateDiffIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testClusterStateDiffSerialization(org.elasticsearch.cluster.ClusterStateDiffIT)",
  "startTimestamp": 1459403962211,
  "executionTime": 47049
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.ClusterStateDiffIT",
  "startTimestamp": 1459403962190,
  "executionTime": 47081
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.geo.GeoBoundingBoxIT",
   "displayName": "org.elasticsearch.search.geo.GeoBoundingBoxIT",
   "methodName": null,
   "className": "org.elasticsearch.search.geo.GeoBoundingBoxIT",
   "children": [
    {
     "id": "ID#testCompleteLonRange(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "displayName": "testCompleteLonRange(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "methodName": "testCompleteLonRange",
     "className": "org.elasticsearch.search.geo.GeoBoundingBoxIT",
     "children": []
    },
    {
     "id": "ID#testLimitsBoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "displayName": "testLimitsBoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "methodName": "testLimitsBoundingBox",
     "className": "org.elasticsearch.search.geo.GeoBoundingBoxIT",
     "children": []
    },
    {
     "id": "ID#testSimpleBoundingBoxTest(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "displayName": "testSimpleBoundingBoxTest(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "methodName": "testSimpleBoundingBoxTest",
     "className": "org.elasticsearch.search.geo.GeoBoundingBoxIT",
     "children": []
    },
    {
     "id": "ID#testLimit2BoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "displayName": "testLimit2BoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
     "methodName": "testLimit2BoundingBox",
     "className": "org.elasticsearch.search.geo.GeoBoundingBoxIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404009283
 }
]

[
 "TEST_STARTED",
 "ID#testCompleteLonRange(org.elasticsearch.search.geo.GeoBoundingBoxIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testCompleteLonRange(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
  "startTimestamp": 1459404009307,
  "executionTime": 2689
 }
]

[
 "TEST_STARTED",
 "ID#testLimitsBoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimitsBoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
  "startTimestamp": 1459404011996,
  "executionTime": 1674
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleBoundingBoxTest(org.elasticsearch.search.geo.GeoBoundingBoxIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleBoundingBoxTest(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
  "startTimestamp": 1459404013670,
  "executionTime": 1506
 }
]

[
 "TEST_STARTED",
 "ID#testLimit2BoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLimit2BoundingBox(org.elasticsearch.search.geo.GeoBoundingBoxIT)",
  "startTimestamp": 1459404015177,
  "executionTime": 1707
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.geo.GeoBoundingBoxIT",
  "startTimestamp": 1459404009283,
  "executionTime": 7629
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT",
   "displayName": "org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT",
   "methodName": null,
   "className": "org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT",
   "children": [
    {
     "id": "ID#testIndicesBoost(org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT)",
     "displayName": "testIndicesBoost(org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT)",
     "methodName": "testIndicesBoost",
     "className": "org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404016922
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesBoost(org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesBoost(org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT)",
  "startTimestamp": 1459404016955,
  "executionTime": 1578
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.indicesboost.SimpleIndicesBoostSearchIT",
  "startTimestamp": 1459404016922,
  "executionTime": 1627
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.transport.ActionNamesIT",
   "displayName": "org.elasticsearch.transport.ActionNamesIT",
   "methodName": null,
   "className": "org.elasticsearch.transport.ActionNamesIT",
   "children": [
    {
     "id": "ID#testActionNamesCategories(org.elasticsearch.transport.ActionNamesIT)",
     "displayName": "testActionNamesCategories(org.elasticsearch.transport.ActionNamesIT)",
     "methodName": "testActionNamesCategories",
     "className": "org.elasticsearch.transport.ActionNamesIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404018558
 }
]

[
 "TEST_STARTED",
 "ID#testActionNamesCategories(org.elasticsearch.transport.ActionNamesIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testActionNamesCategories(org.elasticsearch.transport.ActionNamesIT)",
  "startTimestamp": 1459404018584,
  "executionTime": 398
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.transport.ActionNamesIT",
  "startTimestamp": 1459404018558,
  "executionTime": 461
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
   "displayName": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
   "children": [
    {
     "id": "ID#testEmptySnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testEmptySnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testEmptySnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testRenameOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testRenameOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testRenameOnRestore",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteSnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteSnapshotWithMissingIndexAndShardMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteSnapshotWithMissingIndexAndShardMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteSnapshotWithMissingIndexAndShardMetadata",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testMoveShardWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testMoveShardWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testMoveShardWhileSnapshotting",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testChangeSettingsOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testChangeSettingsOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testChangeSettingsOnRestore",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testRecreateBlocksOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testRecreateBlocksOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testRecreateBlocksOnRestore",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testFreshIndexUUID(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testFreshIndexUUID(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testFreshIndexUUID",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteSnapshotWithCorruptedSnapshotFile(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteSnapshotWithCorruptedSnapshotFile(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteSnapshotWithCorruptedSnapshotFile",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotRelocatingPrimary(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotRelocatingPrimary(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotRelocatingPrimary",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotMoreThanOnce",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteSnapshotWithMissingMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteSnapshotWithMissingMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteSnapshotWithMissingMetadata",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testBatchingShardUpdateTask(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testBatchingShardUpdateTask(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testBatchingShardUpdateTask",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotSingleClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotSingleClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotSingleClosedIndex",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSingleGetAfterRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSingleGetAfterRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSingleGetAfterRestore",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotStatus(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotStatus(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotStatus",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testRestoreTemplates(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testRestoreTemplates(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testRestoreTemplates",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeletionOfFailingToRecoverIndexShouldStopRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeletionOfFailingToRecoverIndexShouldStopRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeletionOfFailingToRecoverIndexShouldStopRestore",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotFileFailureDuringSnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotName(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotName(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotName",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDataFileFailureDuringRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDataFileFailureDuringRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDataFileFailureDuringRestore",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testListCorruptedSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testListCorruptedSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testListCorruptedSnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteIndexDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteIndexDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteIndexDuringSnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testBasicWorkFlow(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testBasicWorkFlow(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testBasicWorkFlow",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteRepositoryWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteRepositoryWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteRepositoryWhileSnapshotting",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testUrlRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testUrlRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testUrlRepository",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testUnallocatedShards(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testUnallocatedShards(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testUnallocatedShards",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testRestoreWithDifferentMappingsAndSettings(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testRestoreWithDifferentMappingsAndSettings(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testRestoreWithDifferentMappingsAndSettings",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testReadonlyRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testReadonlyRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testReadonlyRepository",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testSnapshotClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testSnapshotClosedIndex",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDataFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDataFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDataFileFailureDuringSnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testIncludeGlobalState(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testIncludeGlobalState(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testIncludeGlobalState",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testRestoreAliases(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testRestoreAliases(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testRestoreAliases",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testThrottling(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testThrottling(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testThrottling",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    },
    {
     "id": "ID#testDeleteOrphanSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "displayName": "testDeleteOrphanSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
     "methodName": "testDeleteOrphanSnapshot",
     "className": "org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404019054
 }
]

[
 "TEST_STARTED",
 "ID#testEmptySnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptySnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404019082,
  "executionTime": 486
 }
]

[
 "TEST_STARTED",
 "ID#testRenameOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:00:30,783][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo][test-snap] failed to restore snapshot%0ASnapshotRestoreException[[test-repo:test-snap] indices [test-idx-2] and [test-idx-1] are renamed into the same index [same-name]]%0A%09at org.elasticsearch.snapshots.RestoreService.renamedIndices(RestoreService.java:673)%0A%09at org.elasticsearch.snapshots.RestoreService.restoreSnapshot(RestoreService.java:173)%0A%09at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:82)%0A%09at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:41)%0A%09at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:160)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:00:30,798][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo][test-snap] failed to restore snapshot%0ASnapshotRestoreException[[test-repo:test-snap] indices [test-idx-2] and [test-idx-1] are renamed into the same index [test-idx-1]]%0A%09at org.elasticsearch.snapshots.RestoreService.renamedIndices(RestoreService.java:673)%0A%09at org.elasticsearch.snapshots.RestoreService.restoreSnapshot(RestoreService.java:173)%0A%09at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:82)%0A%09at org.elasticsearch.action.admin.cluster.snapshots.restore.TransportRestoreSnapshotAction.masterOperation(TransportRestoreSnapshotAction.java:41)%0A%09at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:160)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:00:30,803][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot%0A[__WRONG__] InvalidIndexNameException[Invalid index name [__WRONG__], must not start with '_']%0A%09at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:143)%0A%09at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:217)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:00:30,806][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot%0A[alias-3] InvalidIndexNameException[Invalid index name [alias-3], already exists as alias]%0A%09at org.elasticsearch.cluster.metadata.MetaDataCreateIndexService.validateIndexName(MetaDataCreateIndexService.java:161)%0A%09at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:217)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:00:30,810][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot%0ASnapshotRestoreException[[test-repo:test-snap] cannot rename index [test-idx-1] into [alias-1] because of conflict with an alias with the same name]%0A%09at org.elasticsearch.snapshots.RestoreService$1.checkAliasNameConflicts(RestoreService.java:300)%0A%09at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:278)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:00:30,814][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot%0ASnapshotRestoreException[[test-repo:test-snap] cannot rename index [test-idx-1] into [alias-2] because of conflict with an alias with the same name]%0A%09at org.elasticsearch.snapshots.RestoreService$1.checkAliasNameConflicts(RestoreService.java:300)%0A%09at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:278)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRenameOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404019569,
  "executionTime": 12921
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404032491,
  "executionTime": 45669
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSnapshotWithMissingIndexAndShardMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSnapshotWithMissingIndexAndShardMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404078161,
  "executionTime": 6795
 }
]

[
 "TEST_STARTED",
 "ID#testMoveShardWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMoveShardWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404084957,
  "executionTime": 3910
 }
]

[
 "TEST_STARTED",
 "ID#testChangeSettingsOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:32,555][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot%0ASnapshotRestoreException[[test-repo:test-snap] cannot modify setting [index.number_of_shards] on restore]%0A%09at org.elasticsearch.snapshots.RestoreService$1.updateIndexSettings(RestoreService.java:380)%0A%09at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:205)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:32,562][WARN ][org.elasticsearch.snapshots] [node_s0] [test-repo:test-snap] failed to restore snapshot%0Ajava.lang.IllegalArgumentException: must specify non-negative number of shards for index [test-idx]%0A%09at org.elasticsearch.cluster.metadata.IndexMetaData$Builder.build(IndexMetaData.java:749)%0A%09at org.elasticsearch.snapshots.RestoreService$1.updateIndexSettings(RestoreService.java:386)%0A%09at org.elasticsearch.snapshots.RestoreService$1.execute(RestoreService.java:205)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testChangeSettingsOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404088867,
  "executionTime": 7473
 }
]

[
 "TEST_STARTED",
 "ID#testRecreateBlocksOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRecreateBlocksOnRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404096340,
  "executionTime": 2218
 }
]

[
 "TEST_STARTED",
 "ID#testFreshIndexUUID(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testFreshIndexUUID(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404098558,
  "executionTime": 2284
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSnapshotWithCorruptedSnapshotFile(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:41,710][WARN ][org.elasticsearch.repositories.fs] [node_s0] cannot read snapshot file [test-repo:test-snap-1]%0Ajava.lang.IllegalStateException: class org.apache.lucene.store.BufferedChecksumIndexInput cannot seek backwards (pos=-10 getFilePointer()=0)%0A%09at org.apache.lucene.store.ChecksumIndexInput.seek(ChecksumIndexInput.java:50)%0A%09at org.apache.lucene.codecs.CodecUtil.checksumEntireFile(CodecUtil.java:448)%0A%09at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.readBlob(ChecksumBlobStoreFormat.java:99)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreFormat.read(BlobStoreFormat.java:86)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshot(BlobStoreRepository.java:440)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.deleteSnapshot(BlobStoreRepository.java:300)%0A%09at org.elasticsearch.snapshots.SnapshotsService$8.run(SnapshotsService.java:1010)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSnapshotWithCorruptedSnapshotFile(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404100843,
  "executionTime": 1505
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotRelocatingPrimary(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotRelocatingPrimary(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404102349,
  "executionTime": 3239
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404105588,
  "executionTime": 1907
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteSnapshotWithMissingMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:48,724][WARN ][org.elasticsearch.repositories.fs] [node_s0] cannot read metadata for snapshot [test-repo:test-snap-1]%0ASnapshotMissingException[[test-repo:test-snap-1] is missing]; nested: NoSuchFileException[/Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/testrun/integTest/J1/temp/org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT_9744F55C17012246-001/tempDir-001/repos/uqvJcpNkJo/meta-test-snap-1.dat];%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshotMetaData(BlobStoreRepository.java:472)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.deleteSnapshot(BlobStoreRepository.java:310)%0A%09at org.elasticsearch.snapshots.SnapshotsService$8.run(SnapshotsService.java:1010)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.nio.file.NoSuchFileException: /Users/brijeshs/Documents/elasticsearch_sort_netbeans/elasticsearch/core/build/testrun/integTest/J1/temp/org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT_9744F55C17012246-001/tempDir-001/repos/uqvJcpNkJo/meta-test-snap-1.dat%0A%09at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)%0A%09at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)%0A%09at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)%0A%09at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)%0A%09at java.nio.file.Files.newByteChannel(Files.java:361)%0A%09at java.nio.file.Files.newByteChannel(Files.java:407)%0A%09at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384)%0A%09at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:193)%0A%09at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:193)%0A%09at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:193)%0A%09at org.apache.lucene.mockfile.HandleTrackingFS.newInputStream(HandleTrackingFS.java:93)%0A%09at org.apache.lucene.mockfile.FilterFileSystemProvider.newInputStream(FilterFileSystemProvider.java:193)%0A%09at org.apache.lucene.mockfile.HandleTrackingFS.newInputStream(HandleTrackingFS.java:93)%0A%09at java.nio.file.Files.newInputStream(Files.java:152)%0A%09at org.elasticsearch.common.blobstore.fs.FsBlobContainer.readBlob(FsBlobContainer.java:94)%0A%09at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.readBlob(ChecksumBlobStoreFormat.java:93)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreFormat.read(BlobStoreFormat.java:86)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshotMetaData(BlobStoreRepository.java:470)%0A%09... 5 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteSnapshotWithMissingMetadata(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404107496,
  "executionTime": 1762
 }
]

[
 "TEST_STARTED",
 "ID#testBatchingShardUpdateTask(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,309][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,309][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,311][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index-template [random_index_template], cause [api]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,311][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [455], source [create-index-template [random_index_template], cause [api]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,311][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [455]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,312][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,313][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [455], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,313][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 455%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,322][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 8ms done applying updated cluster_state (version: 455, uuid: 4aiLkmdWSheD5PJC_xwv6Q)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,322][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 455%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,329][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index-template [random_index_template], cause [api]]: took 17ms done applying updated cluster_state (version: 455, uuid: 4aiLkmdWSheD5PJC_xwv6Q)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,331][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put_repository [test-repo]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,332][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [456], source [put_repository [test-repo]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,333][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [456]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,333][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,333][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [456], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,333][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 456%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,341][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 456%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,341][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 8ms done applying updated cluster_state (version: 456, uuid: wDTPvDh3QIiRjnZgXqjd-g)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,359][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put_repository [test-repo]]: took 28ms done applying updated cluster_state (version: 456, uuid: wDTPvDh3QIiRjnZgXqjd-g)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,364][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index [test-idx], cause [api]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,367][INFO ][org.elasticsearch.cluster.metadata] [node_s0] [test-idx] creating index, cause [api], templates [random_index_template], shards [17]/[0], mappings [_default_]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,368][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [457], source [create-index [test-idx], cause [api]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,368][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [457]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,369][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,369][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [457], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,369][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 457%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,402][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][7] sending shard started for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=lt8qebcmRRqzlFFunQEe5Q], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,402][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=lt8qebcmRRqzlFFunQEe5Q], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,412][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][5] sending shard started for [test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=17W0-FTqQeKui8otDZR5PA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,412][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=17W0-FTqQeKui8otDZR5PA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,424][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][1] sending shard started for [test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=gZCPKJbrQ1Otx7gAkhEgbw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,424][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=gZCPKJbrQ1Otx7gAkhEgbw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,434][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][3] sending shard started for [test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=qGD0_H57RWmFi7PiJY8Djw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,435][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=qGD0_H57RWmFi7PiJY8Djw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,442][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 457%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,442][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 72ms done applying updated cluster_state (version: 457, uuid: iofJN_eZSq-iJj1iSY8_nA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,472][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][6] sending shard started for [test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=JLgcxSnTQG27_fZ8qYYZ9w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,473][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=JLgcxSnTQG27_fZ8qYYZ9w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,485][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] sending shard started for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=ynruvYCKSdiRT1x_wzw4Vw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,486][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=ynruvYCKSdiRT1x_wzw4Vw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,496][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] sending shard started for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=Kyx59fHfR7CozjXxQqtJgA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,496][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=Kyx59fHfR7CozjXxQqtJgA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,505][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index [test-idx], cause [api]]: took 140ms done applying updated cluster_state (version: 457, uuid: iofJN_eZSq-iJj1iSY8_nA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,505][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=lt8qebcmRRqzlFFunQEe5Q], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=17W0-FTqQeKui8otDZR5PA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=gZCPKJbrQ1Otx7gAkhEgbw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=qGD0_H57RWmFi7PiJY8Djw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=JLgcxSnTQG27_fZ8qYYZ9w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=ynruvYCKSdiRT1x_wzw4Vw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=Kyx59fHfR7CozjXxQqtJgA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,507][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [458], source [shard-started ([test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=lt8qebcmRRqzlFFunQEe5Q], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=17W0-FTqQeKui8otDZR5PA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=gZCPKJbrQ1Otx7gAkhEgbw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=qGD0_H57RWmFi7PiJY8Djw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=JLgcxSnTQG27_fZ8qYYZ9w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=ynruvYCKSdiRT1x_wzw4Vw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=Kyx59fHfR7CozjXxQqtJgA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,508][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] sending shard started for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,509][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [458]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,509][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,510][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,510][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [458], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,510][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 458%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,565][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][14] sending shard started for [test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=ur47_ibnRii7k6Emk8X1zg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,565][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=ur47_ibnRii7k6Emk8X1zg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,570][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][11] sending shard started for [test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=U0FkqZQxRxm5nCekp5DTIA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,571][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=U0FkqZQxRxm5nCekp5DTIA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,578][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][13] sending shard started for [test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=LjP7Z7VZTS6raSZCkr1tpQ], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,578][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=LjP7Z7VZTS6raSZCkr1tpQ], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,596][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][9] sending shard started for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=-wTDzDjuTYilCg58WOCt4A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,596][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=-wTDzDjuTYilCg58WOCt4A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,605][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 94ms done applying updated cluster_state (version: 458, uuid: sbzmhRNhTZ24_NZRQtrMTA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,605][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 458%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,627][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][10] sending shard started for [test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=nNjVPpk3TqqANwlbFGn15A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,628][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=nNjVPpk3TqqANwlbFGn15A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,651][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] sending shard started for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,651][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,658][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][12] sending shard started for [test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=V8iGYrRDQce5CIaZHtSLFA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,659][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=V8iGYrRDQce5CIaZHtSLFA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,668][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=lt8qebcmRRqzlFFunQEe5Q], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=17W0-FTqQeKui8otDZR5PA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=gZCPKJbrQ1Otx7gAkhEgbw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=qGD0_H57RWmFi7PiJY8Djw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=JLgcxSnTQG27_fZ8qYYZ9w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=ynruvYCKSdiRT1x_wzw4Vw], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=Kyx59fHfR7CozjXxQqtJgA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]: took 162ms done applying updated cluster_state (version: 458, uuid: sbzmhRNhTZ24_NZRQtrMTA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,669][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=ur47_ibnRii7k6Emk8X1zg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=U0FkqZQxRxm5nCekp5DTIA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=LjP7Z7VZTS6raSZCkr1tpQ], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=-wTDzDjuTYilCg58WOCt4A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=nNjVPpk3TqqANwlbFGn15A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=V8iGYrRDQce5CIaZHtSLFA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,670][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] sending shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,670][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [459], source [shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=ur47_ibnRii7k6Emk8X1zg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=U0FkqZQxRxm5nCekp5DTIA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=LjP7Z7VZTS6raSZCkr1tpQ], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=-wTDzDjuTYilCg58WOCt4A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=nNjVPpk3TqqANwlbFGn15A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=V8iGYrRDQce5CIaZHtSLFA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,671][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,672][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [459]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,673][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,673][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [459], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,673][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 459%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,710][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][16] sending shard started for [test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=QWdn50q-QsivjjGIK8saMg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,711][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=QWdn50q-QsivjjGIK8saMg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,720][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 47ms done applying updated cluster_state (version: 459, uuid: GUEGNfULRqm4z24sbDqjtw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,720][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 459%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,720][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][6]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,744][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][6]] active fully on other nodes)]: took 23ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,744][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][2]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,748][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] sending shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,748][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,750][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][15] sending shard started for [test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=BPRIE1_fQk-GYU2pFZJj_A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,751][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=BPRIE1_fQk-GYU2pFZJj_A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from store], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,763][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=ur47_ibnRii7k6Emk8X1zg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=U0FkqZQxRxm5nCekp5DTIA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=LjP7Z7VZTS6raSZCkr1tpQ], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=-wTDzDjuTYilCg58WOCt4A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=nNjVPpk3TqqANwlbFGn15A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=WUu84hA7RQmkrIY8vzJjJg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=V8iGYrRDQce5CIaZHtSLFA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]: took 94ms done applying updated cluster_state (version: 459, uuid: GUEGNfULRqm4z24sbDqjtw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,765][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=QWdn50q-QsivjjGIK8saMg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=BPRIE1_fQk-GYU2pFZJj_A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,766][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-idx][8], [test-idx][16], [test-idx][8], [test-idx][15]] ...]).%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,764][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][2]] active fully on other nodes)]: took 19ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,767][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][4]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,766][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [460], source [shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=QWdn50q-QsivjjGIK8saMg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=BPRIE1_fQk-GYU2pFZJj_A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,768][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [460]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,783][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][4]] active fully on other nodes)]: took 16ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,784][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,784][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [460], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,784][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 460%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,796][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 460%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,796][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 12ms done applying updated cluster_state (version: 460, uuid: zkZlsI-MSmm011tmdJZ2GA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,796][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][10]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,815][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][10]] active fully on other nodes)]: took 18ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,815][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][4]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,820][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], s[INITIALIZING], a[id=QWdn50q-QsivjjGIK8saMg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=srIA2V26TPa1yRbW8W5v-w], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], s[INITIALIZING], a[id=BPRIE1_fQk-GYU2pFZJj_A], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:01:49.367Z]]), reason [after recovery from store]]: took 54ms done applying updated cluster_state (version: 460, uuid: zkZlsI-MSmm011tmdJZ2GA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,820][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,821][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,822][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,823][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,828][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][4]] active fully on other nodes)]: took 12ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,830][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][6]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,838][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][6]] active fully on other nodes)]: took 8ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,839][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][2]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,839][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 16ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,840][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,850][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][2]] active fully on other nodes)]: took 11ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,851][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][12]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,861][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: took 21ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,861][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,873][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][12]] active fully on other nodes)]: took 21ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,873][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][0]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,883][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: took 21ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,884][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,895][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][0]] active fully on other nodes)]: took 22ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,895][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][15]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,907][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: took 23ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,907][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,912][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][15]] active fully on other nodes)]: took 16ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,913][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][8]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,924][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: took 17ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,925][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,935][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][8]] active fully on other nodes)]: took 22ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,948][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: took 23ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,948][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][16]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,968][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][16]] active fully on other nodes)]: took 20ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,968][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,993][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: took 24ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:49,993][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,027][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: took 33ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,027][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_health (wait_for_events [LANGUID])]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,027][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_health (wait_for_events [LANGUID])]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,036][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put-mapping [type1],put-mapping [type1],put-mapping [type1],put-mapping [type1]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,037][DEBUG][org.elasticsearch.cluster.metadata] [node_s0] [test-idx] create_mapping [type1] with source [{\"type1\":{\"dynamic_templates\":[{\"template-strings\":{\"mapping\":{\"fielddata\":{\"loading\":\"lazy\"}},\"match_mapping_type\":\"string\"}},{\"template-longs\":{\"mapping\":{\"fielddata\":{\"loading\":\"lazy\"}},\"match_mapping_type\":\"long\"}},{\"template-doubles\":{\"mapping\":{\"fielddata\":{\"loading\":\"eager\"}},\"match_mapping_type\":\"double\"}},{\"template-geo_points\":{\"mapping\":{\"fielddata\":{\"loading\":\"lazy\"}},\"match_mapping_type\":\"geo_point\"}},{\"template-booleans\":{\"mapping\":{\"fielddata\":{\"loading\":\"eager\"}},\"match_mapping_type\":\"boolean\"}}],\"properties\":{\"field1\":{\"type\":\"string\",\"fielddata\":{\"loading\":\"lazy\"}}}}}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,042][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [461], source [put-mapping [type1],put-mapping [type1],put-mapping [type1],put-mapping [type1]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,042][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [461]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,042][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,043][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [461], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,043][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 461%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,054][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 11ms done applying updated cluster_state (version: 461, uuid: TIZLLvpaTeymoQi6eRDrFg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,054][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 461%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,062][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put-mapping [type1],put-mapping [type1],put-mapping [type1],put-mapping [type1]]: took 26ms done applying updated cluster_state (version: 461, uuid: TIZLLvpaTeymoQi6eRDrFg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,062][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put-mapping [type1],put-mapping [type1],put-mapping [type1],put-mapping [type1]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,071][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put-mapping [type1],put-mapping [type1],put-mapping [type1],put-mapping [type1]]: took 8ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,969][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create_snapshot [test-snap]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,969][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [462], source [create_snapshot [test-snap]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,969][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [462]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,970][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,970][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [462], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,970][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 462%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,974][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 462%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,974][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 4ms done applying updated cluster_state (version: 462, uuid: k_-PVSneSU6CqnJolHmCLg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,978][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create_snapshot [test-snap]]: took 9ms done applying updated cluster_state (version: 462, uuid: k_-PVSneSU6CqnJolHmCLg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,992][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update_snapshot [test-snap]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,993][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [463], source [update_snapshot [test-snap]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,993][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [463]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,993][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,993][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [463], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,993][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 463%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,994][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 0s done applying updated cluster_state (version: 463, uuid: n2-HrDj_TRCLQ2QKy7aAew)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,994][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 463%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,995][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update_snapshot [test-snap]]: took 2ms done applying updated cluster_state (version: 463, uuid: n2-HrDj_TRCLQ2QKy7aAew)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:50,995][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [test_block]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [test_block]: took 251ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [464], source [update snapshot state]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [464]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [464], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,247][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 464%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,250][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 2ms done applying updated cluster_state (version: 464, uuid: jlLM0GRISPqJyCgDo9heTg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,250][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 464%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,254][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 7ms done applying updated cluster_state (version: 464, uuid: jlLM0GRISPqJyCgDo9heTg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,254][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,255][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,256][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [remove snapshot metadata]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [465], source [remove snapshot metadata]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [465]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,257][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [465], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,258][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 465%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,259][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 1ms done applying updated cluster_state (version: 465, uuid: i8c_W6eVS4WNa9YswGmuJQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,259][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 465%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,260][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [remove snapshot metadata]: took 2ms done applying updated cluster_state (version: 465, uuid: i8c_W6eVS4WNa9YswGmuJQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,260][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [close-indices [test-idx]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,260][INFO ][org.elasticsearch.cluster.metadata] [node_s0] closing indices [[test-idx]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,261][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [466], source [close-indices [test-idx]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,261][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [466]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,261][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,261][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [466], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,261][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 466%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,378][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 116ms done applying updated cluster_state (version: 466, uuid: KR9mRAJtSEyEg9V52iDC-g)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,378][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 466%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,507][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [close-indices [test-idx]]: took 246ms done applying updated cluster_state (version: 466, uuid: KR9mRAJtSEyEg9V52iDC-g)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,512][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [restore_snapshot[test-snap]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,524][DEBUG][org.elasticsearch.cluster.routing.allocation.allocator] [node_s0] skipping rebalance due to in-flight shard/store fetches%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,524][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [467], source [restore_snapshot[test-snap]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,524][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [467]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,527][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,527][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [467], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,527][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 467%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,537][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 9ms done applying updated cluster_state (version: 467, uuid: BeFvaKfYTOCb9SbNgS81Sw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,540][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 467%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,546][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [restore_snapshot[test-snap]]: took 34ms done applying updated cluster_state (version: 467, uuid: BeFvaKfYTOCb9SbNgS81Sw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,546][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_reroute(async_shard_fetch)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,552][DEBUG][org.elasticsearch.cluster.routing.allocation.allocator] [node_s0] skipping rebalance due to in-flight shard/store fetches%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,553][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [468], source [cluster_reroute(async_shard_fetch)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,553][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [468]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,553][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,553][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [468], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,553][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 468%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,580][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 27ms done applying updated cluster_state (version: 468, uuid: BXi4TjVbQpiqBpejPtNtnQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,581][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 468%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,590][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][3] sending shard started for [test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-1mjevXJTXKnlRRo-goeKA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,590][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-1mjevXJTXKnlRRo-goeKA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,623][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_reroute(async_shard_fetch)]: took 76ms done applying updated cluster_state (version: 468, uuid: BXi4TjVbQpiqBpejPtNtnQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,623][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-1mjevXJTXKnlRRo-goeKA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,627][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [469], source [shard-started ([test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-1mjevXJTXKnlRRo-goeKA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,627][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [469]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,628][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,628][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [469], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,628][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 469%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,634][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][1] sending shard started for [test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,634][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,641][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][9] sending shard started for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,641][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,642][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][9] sending shard started for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,643][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][1] sending shard started for [test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,643][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,644][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,668][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] sending shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,669][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,681][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][10] sending shard started for [test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,682][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,689][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][7] sending shard started for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l71j6YIVT82__8lj3oAXkg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,689][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l71j6YIVT82__8lj3oAXkg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,695][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 67ms done applying updated cluster_state (version: 469, uuid: 0p9bhRAWQReOlDK0FspntQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,695][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 469%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,696][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] sending shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,696][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,696][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][10] sending shard started for [test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,696][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,719][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] sending shard started for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QWDo9GjxQY2d5AjdYXqp-g], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,720][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QWDo9GjxQY2d5AjdYXqp-g], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,732][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][14] sending shard started for [test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RDlgOaSMRTyI7fMssSE0Xw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,733][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RDlgOaSMRTyI7fMssSE0Xw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,740][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][15] sending shard started for [test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gEiAlJ9YRmejNcEwQhehlw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,740][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gEiAlJ9YRmejNcEwQhehlw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,747][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][3], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-1mjevXJTXKnlRRo-goeKA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: took 123ms done applying updated cluster_state (version: 469, uuid: 0p9bhRAWQReOlDK0FspntQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,747][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l71j6YIVT82__8lj3oAXkg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QWDo9GjxQY2d5AjdYXqp-g], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RDlgOaSMRTyI7fMssSE0Xw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gEiAlJ9YRmejNcEwQhehlw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,752][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [470], source [shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l71j6YIVT82__8lj3oAXkg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QWDo9GjxQY2d5AjdYXqp-g], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RDlgOaSMRTyI7fMssSE0Xw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gEiAlJ9YRmejNcEwQhehlw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,752][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [470]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,753][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,754][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [470], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,754][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 470%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,836][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][16] sending shard started for [test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ELV-_6elQeS4d8yshGB3lw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,836][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ELV-_6elQeS4d8yshGB3lw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,857][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][13] sending shard started for [test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TqypKIAbRI60X2uZpo-MBQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,858][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TqypKIAbRI60X2uZpo-MBQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,867][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 113ms done applying updated cluster_state (version: 470, uuid: bI0BrDnyROGRRe291xFaTQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,867][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 470%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,869][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][11] sending shard started for [test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=M7WbNFKbRPWZ5lREvikIWQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,870][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=M7WbNFKbRPWZ5lREvikIWQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,877][DEBUG][org.elasticsearch.cluster.action.shard] [node_s1] [test-idx][5] sending shard started for [test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=65y3Vek0QuGZPSCCVK4e6w], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:51,877][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=65y3Vek0QuGZPSCCVK4e6w], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,054][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] sending shard started for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=LwgyqCAbQFmurIwwj_ybjw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,054][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=LwgyqCAbQFmurIwwj_ybjw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,114][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][12] sending shard started for [test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=C0a2pAloSa-HElUTU-GDiw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,114][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=C0a2pAloSa-HElUTU-GDiw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,123][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=P4KNAoJkR5KwsW-B4UQvgA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][1], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=U-Noql1nSgaKvbpS_ZYMbQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l71j6YIVT82__8lj3oAXkg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ips4QPuIQfCgjPHp12lkaA], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][10], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UwJkKocCQ96uRu_R2nAmBg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard state is [POST_RECOVERY], mark shard as started],shard-started ([test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QWDo9GjxQY2d5AjdYXqp-g], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][14], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RDlgOaSMRTyI7fMssSE0Xw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][15], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gEiAlJ9YRmejNcEwQhehlw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: took 374ms done applying updated cluster_state (version: 470, uuid: bI0BrDnyROGRRe291xFaTQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,124][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ELV-_6elQeS4d8yshGB3lw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TqypKIAbRI60X2uZpo-MBQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=M7WbNFKbRPWZ5lREvikIWQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=65y3Vek0QuGZPSCCVK4e6w], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=LwgyqCAbQFmurIwwj_ybjw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=C0a2pAloSa-HElUTU-GDiw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,125][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [471], source [shard-started ([test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ELV-_6elQeS4d8yshGB3lw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TqypKIAbRI60X2uZpo-MBQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=M7WbNFKbRPWZ5lREvikIWQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=65y3Vek0QuGZPSCCVK4e6w], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=LwgyqCAbQFmurIwwj_ybjw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=C0a2pAloSa-HElUTU-GDiw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,125][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [471]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,126][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,136][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [471], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,136][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 471%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,173][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 37ms done applying updated cluster_state (version: 471, uuid: cS3k4HpnRYOZg4CJq_jHkQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,173][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][10]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,173][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 471%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,193][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][10]] active fully on other nodes)]: took 19ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,193][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][8]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,210][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][8]] active fully on other nodes)]: took 17ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,210][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][15]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,218][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][6] sending shard started for [test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=22SG5QpAQQSFRtpcvr-_mg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,218][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=22SG5QpAQQSFRtpcvr-_mg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,229][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][15]] active fully on other nodes)]: took 18ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,229][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][0]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,246][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][0]] active fully on other nodes)]: took 16ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,266][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] sending shard started for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ofxv44igRm-o8j2Vkc_OVw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,266][DEBUG][org.elasticsearch.cluster.action.shard] [node_s0] received shard started for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ofxv44igRm-o8j2Vkc_OVw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]], indexUUID [qGePyLBjQfWYwfUhYQW18g], message [after recovery from repository], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,273][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][16], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ELV-_6elQeS4d8yshGB3lw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][13], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TqypKIAbRI60X2uZpo-MBQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][11], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=M7WbNFKbRPWZ5lREvikIWQ], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=65y3Vek0QuGZPSCCVK4e6w], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=LwgyqCAbQFmurIwwj_ybjw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][12], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=C0a2pAloSa-HElUTU-GDiw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: took 148ms done applying updated cluster_state (version: 471, uuid: cS3k4HpnRYOZg4CJq_jHkQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,273][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=22SG5QpAQQSFRtpcvr-_mg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ofxv44igRm-o8j2Vkc_OVw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,274][INFO ][org.elasticsearch.cluster.routing.allocation] [node_s0] Cluster health status changed from [RED] to [GREEN] (reason: [shards started [[test-idx][6], [test-idx][4]] ...]).%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,274][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [472], source [shard-started ([test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=22SG5QpAQQSFRtpcvr-_mg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ofxv44igRm-o8j2Vkc_OVw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,274][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [472]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,275][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,278][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [472], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,278][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 472%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,286][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 7ms done applying updated cluster_state (version: 472, uuid: zkzhxAEBS5mC8cRyCuKSBQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,286][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][2]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,286][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 472%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,307][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([test-idx][6], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=22SG5QpAQQSFRtpcvr-_mg], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository],shard-started ([test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ofxv44igRm-o8j2Vkc_OVw], unassigned_info[[reason=EXISTING_INDEX_RESTORED], at[2016-03-31T06:01:51.512Z], details[restore_source[test-repo/test-snap]]]), reason [after recovery from repository]]: took 33ms done applying updated cluster_state (version: 472, uuid: zkzhxAEBS5mC8cRyCuKSBQ)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,307][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][2]] active fully on other nodes)]: took 20ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,307][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [test_block]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,307][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][12]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,308][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [test_block]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,311][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_reroute(async_shard_fetch)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,311][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_reroute(async_shard_fetch)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,312][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [test_block]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,329][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][12]] active fully on other nodes)]: took 20ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,329][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][10]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,340][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][10]] active fully on other nodes)]: took 10ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,340][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][8]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,351][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][8]] active fully on other nodes)]: took 11ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,351][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][15]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,361][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][15]] active fully on other nodes)]: took 9ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,361][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][0]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,371][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][0]] active fully on other nodes)]: took 9ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,371][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][6]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,389][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][6]] active fully on other nodes)]: took 18ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,389][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][4]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,409][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [indices_store ([[test-idx][4]] active fully on other nodes)]: took 19ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,571][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [test_block]: took 259ms no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,571][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,571][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [473], source [update snapshot state]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,571][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [473]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,572][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,572][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [473], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,572][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 473%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,572][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 0s done applying updated cluster_state (version: 473, uuid: MCxoDB5WTlanfGtXuZzGYw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,573][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 473%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,573][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 2ms done applying updated cluster_state (version: 473, uuid: MCxoDB5WTlanfGtXuZzGYw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,574][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,575][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [update snapshot state]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,576][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][16]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][16]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][13]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][11]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][16]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][16]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,577][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][7]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][5]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][3]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][9]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][14]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,578][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [indices_store ([[test-idx][1]] active fully on other nodes)]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete-index [test-idx]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.metadata] [node_s0] [test-idx] deleting index%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [474], source [delete-index [test-idx]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [474]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [474], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:52,585][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 474%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,165][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 579ms done applying updated cluster_state (version: 474, uuid: CrehmUBQTdS6l6pmCocHdw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,165][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 474%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,743][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete-index [test-idx]]: took 1.1s done applying updated cluster_state (version: 474, uuid: CrehmUBQTdS6l6pmCocHdw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,743][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [remove-index-template [random_index_template]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,743][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [475], source [remove-index-template [random_index_template]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,743][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [475]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,744][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,744][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [475], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,744][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 475%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,751][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 6ms done applying updated cluster_state (version: 475, uuid: G24PNvDTT1uryrnvh2U-ig)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,751][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 475%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,758][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [remove-index-template [random_index_template]]: took 14ms done applying updated cluster_state (version: 475, uuid: G24PNvDTT1uryrnvh2U-ig)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,758][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,759][DEBUG][org.elasticsearch.cluster.service] [node_s0] cluster state updated, version [476], source [delete_repository [*]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,759][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [476]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,759][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,759][DEBUG][org.elasticsearch.cluster.service] [node_s1] cluster state updated, version [476], source [local-disco-receive(from master)]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,759][DEBUG][org.elasticsearch.cluster.service] [node_s1] set local cluster state to version 476%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,765][DEBUG][org.elasticsearch.cluster.service] [node_s1] processing [local-disco-receive(from master)]: took 5ms done applying updated cluster_state (version: 476, uuid: Zoe0uQjOT56dpF_LIbtC7A)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,765][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 476%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:01:53,770][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: took 11ms done applying updated cluster_state (version: 476, uuid: Zoe0uQjOT56dpF_LIbtC7A)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBatchingShardUpdateTask(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404109259,
  "executionTime": 4512
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotSingleClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotSingleClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404113772,
  "executionTime": 1400
 }
]

[
 "TEST_STARTED",
 "ID#testSingleGetAfterRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSingleGetAfterRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404115172,
  "executionTime": 2067
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotStatus(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotStatus(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404117239,
  "executionTime": 1247
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreTemplates(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreTemplates(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404118486,
  "executionTime": 251
 }
]

[
 "TEST_STARTED",
 "ID#testDeletionOfFailingToRecoverIndexShouldStopRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeletionOfFailingToRecoverIndexShouldStopRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404118737,
  "executionTime": 2656
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404121393,
  "executionTime": 722
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotName(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotName(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404122115,
  "executionTime": 178
 }
]

[
 "TEST_STARTED",
 "ID#testDataFileFailureDuringRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,061][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,072][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=fL1ioKlaQiC30N3bfBfkVw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,073][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][5]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][5]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,078][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][5] received shard failed for [test-idx][5], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Ui3z3vjOSE-FiW8cmo0hEg], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][5]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,091][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,093][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RUdc2v6XTL27gzeR0T3BRg], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,096][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,099][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_pjEsqV0Sg2wuIP8Bnz7jw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,134][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,145][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=cBdR49slRpK46HsDANkXEQ], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,146][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_pjEsqV0Sg2wuIP8Bnz7jw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,147][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RUdc2v6XTL27gzeR0T3BRg], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,147][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=cBdR49slRpK46HsDANkXEQ], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,195][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,199][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=mBCPDVIuQN-sHbDgYyVi1g], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,200][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][9]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][9]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,203][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=3U1LeAO_R7Gt-WUD0Yc5tw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][9]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,205][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RUdc2v6XTL27gzeR0T3BRg], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,205][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_pjEsqV0Sg2wuIP8Bnz7jw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,205][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=cBdR49slRpK46HsDANkXEQ], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,227][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=mBCPDVIuQN-sHbDgYyVi1g], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,232][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=3U1LeAO_R7Gt-WUD0Yc5tw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,254][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=RUdc2v6XTL27gzeR0T3BRg], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,256][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=_pjEsqV0Sg2wuIP8Bnz7jw], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,256][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[1], restoring[test-repo:test-snap], s[INITIALIZING], a[id=cBdR49slRpK46HsDANkXEQ], unassigned_info[[reason=NEW_INDEX_RESTORED], at[2016-03-31T06:02:04.997Z], details[restore_source[test-repo/test-snap]]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,257][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][5]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][5]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,258][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][5] received shard failed for [test-idx][5], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=35qqT148TsyKoUik0z94qQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.092Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][5]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][5]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,271][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,279][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=rUtnVlQmRK6I9zW20Nsq5Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.092Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,291][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=rUtnVlQmRK6I9zW20Nsq5Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.092Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,385][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,391][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,392][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1T6N3fO8QA-C3UXI5gmYDg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,399][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=xS_0_13oTu-G2F4NzhuMpA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,406][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,411][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1bjF8JZbS-mh21iOLmq8hw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,425][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][9]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][9]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,426][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l_YL33gnQDmLDeZWkDDxEg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][9]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,435][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=xS_0_13oTu-G2F4NzhuMpA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,438][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,439][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TQ7Zohh3RYy_z77XFbA05Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,446][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1T6N3fO8QA-C3UXI5gmYDg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,448][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1bjF8JZbS-mh21iOLmq8hw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,479][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TQ7Zohh3RYy_z77XFbA05Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,489][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l_YL33gnQDmLDeZWkDDxEg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,499][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,500][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=mdY7fXHXTFKSNWs7akBstA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.342Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,522][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=xS_0_13oTu-G2F4NzhuMpA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,535][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1T6N3fO8QA-C3UXI5gmYDg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,537][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1bjF8JZbS-mh21iOLmq8hw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,550][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=mdY7fXHXTFKSNWs7akBstA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.342Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,556][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l_YL33gnQDmLDeZWkDDxEg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,556][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[3], restoring[test-repo:test-snap], s[INITIALIZING], a[id=TQ7Zohh3RYy_z77XFbA05Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.265Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,624][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,630][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=9MM8GUIPSZi5StKoNvp_fQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.567Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,636][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,641][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][9]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][9]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,641][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=jm_EELdpQcWWcSL9SjbHGA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.567Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,648][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=rmIVd99RQu-nvNric0vR8g], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.567Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][9]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][9]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,656][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][9] received shard failed for [test-idx][9], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=rmIVd99RQu-nvNric0vR8g], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.567Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,670][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,671][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PXGsa3gTRgS4FSOmf_Xp4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.566Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,679][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,682][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6f5iupgdTM6xuB9bR0yRaw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.567Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,683][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PXGsa3gTRgS4FSOmf_Xp4Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.566Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,683][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6f5iupgdTM6xuB9bR0yRaw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.567Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,690][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,691][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=wLXbQKvfRz2dbncqNGH2Wg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.566Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,697][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,698][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=wLXbQKvfRz2dbncqNGH2Wg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.566Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,703][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-4-xULsZSKCJA-vYEWnJog], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.648Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,719][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=-4-xULsZSKCJA-vYEWnJog], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.648Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,723][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,724][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=iIdPhkCOSXKLNzTs50GPiw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.648Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,730][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,736][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=siApsH9WQ5CqghktDlIquw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.684Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,747][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=iIdPhkCOSXKLNzTs50GPiw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.648Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,747][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[5], restoring[test-repo:test-snap], s[INITIALIZING], a[id=wLXbQKvfRz2dbncqNGH2Wg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.566Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,749][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,754][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=vcG1YRyaTCG0wpFmIfcDog], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.684Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,834][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,835][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=L5DVnz7RRXi5UKqJZ8v6lQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,841][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=L5DVnz7RRXi5UKqJZ8v6lQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,852][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,853][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=0LbOyjwMRPu3WW_R81J7_A], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.756Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,854][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=0LbOyjwMRPu3WW_R81J7_A], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.756Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,878][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,880][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=nvdjnh3PSEql-cN4t9cmxQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,881][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=nvdjnh3PSEql-cN4t9cmxQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,881][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,886][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,886][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=jVq6TjSXT6Ca4lY8blYXRw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.848Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,891][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ue37NfUBS9CY8Ezn9K7laQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.855Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,900][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=jVq6TjSXT6Ca4lY8blYXRw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.848Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,901][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=ue37NfUBS9CY8Ezn9K7laQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.855Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,902][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,906][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,906][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=0cElcHeVQnKlwDSG6JkFpw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,910][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Hx59Kib8RzGTEDanxbs1fg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,918][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[7], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Hx59Kib8RzGTEDanxbs1fg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.755Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,926][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,932][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=pD3hxxpfQ82pAJXjuFo9Lw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.882Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,933][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=pD3hxxpfQ82pAJXjuFo9Lw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.882Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,950][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,951][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6s-p9upMREqIfxB4pAst0Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.910Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,960][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6s-p9upMREqIfxB4pAst0Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.910Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,961][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,962][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=W-PXe5jzRHu1ahPLYPWzyQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.910Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,963][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,964][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=YO6qe-NoQfGfJF9P0eEfSQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.924Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,967][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,968][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Ik2rV_9tSrqT_OqdppsWxw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.910Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,975][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=W-PXe5jzRHu1ahPLYPWzyQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.910Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,976][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[9], restoring[test-repo:test-snap], s[INITIALIZING], a[id=YO6qe-NoQfGfJF9P0eEfSQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.924Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,976][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Ik2rV_9tSrqT_OqdppsWxw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.910Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,980][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,986][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6fKxnkHHTNKg8D0AMe_kOg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.949Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:05,988][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6fKxnkHHTNKg8D0AMe_kOg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.949Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,017][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=6fKxnkHHTNKg8D0AMe_kOg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.949Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,022][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,025][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[11], restoring[test-repo:test-snap], s[INITIALIZING], a[id=91p9ko0dRj-nIIFHblmdaA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.977Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,026][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,032][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=c7PbasppRtWKvviTJtvgsw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.962Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,040][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,044][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=C7YfzQI6TBWRXZpghsKKjQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.977Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,107][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,108][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=CkEjg8DsTfSkGzAC6yc2vw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,110][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=CkEjg8DsTfSkGzAC6yc2vw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,124][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,125][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=A1dq8WZgSKCK9uMslNXYSw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,128][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=A1dq8WZgSKCK9uMslNXYSw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,138][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,139][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=eOS-Hzq_TiWCXklsgN92Rg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,139][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,140][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,141][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=WC-gPFf2Rk6zY5SMF5WjEQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,144][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Aav4nwVmS6yPKGa23fLopg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.111Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,145][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Aav4nwVmS6yPKGa23fLopg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.111Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,151][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,152][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[13], restoring[test-repo:test-snap], s[INITIALIZING], a[id=WC-gPFf2Rk6zY5SMF5WjEQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,153][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=eOS-Hzq_TiWCXklsgN92Rg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.046Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,155][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=angeGUALSC6fpZVqpukRyA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.977Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,157][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,160][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=sArM7QOtSRKd7hrpRXY36w], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.129Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,161][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=angeGUALSC6fpZVqpukRyA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:05.977Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,162][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=sArM7QOtSRKd7hrpRXY36w], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.129Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,184][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,188][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,188][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1kqYGCfnQfalIqN6xGgUbw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.155Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,192][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=MiXNRgX-Sny1mWZMnOTSoQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.154Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,193][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[15], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1kqYGCfnQfalIqN6xGgUbw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.155Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,195][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=MiXNRgX-Sny1mWZMnOTSoQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.154Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,209][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,210][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=FWCNJa66Tu6WivlsTEaHmA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.155Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,216][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=FWCNJa66Tu6WivlsTEaHmA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.155Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,238][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,239][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PTSpAKEvS167xaeRGFA7VQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.164Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,246][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,247][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=cThbJX8JTTGwjZgA_-5Dpg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.210Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,252][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,253][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=rScHCPExTle7caf-ULt6eA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.164Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,254][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,255][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=YGTXqEiiStSY86v4-qBf5A], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.210Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,256][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=cThbJX8JTTGwjZgA_-5Dpg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.210Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,256][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=YGTXqEiiStSY86v4-qBf5A], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.210Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,256][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[17], restoring[test-repo:test-snap], s[INITIALIZING], a[id=rScHCPExTle7caf-ULt6eA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.164Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,256][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PTSpAKEvS167xaeRGFA7VQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.164Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,262][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,266][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gFeLiTOrRjeHTtg28ZvYCA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.217Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,267][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gFeLiTOrRjeHTtg28ZvYCA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.217Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,303][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,306][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,307][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=iilQ8dQfR8yB8aFoZ-yp_g], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.258Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,316][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gg59NVWOROS5vL8_xnlFNQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.258Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,317][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=gg59NVWOROS5vL8_xnlFNQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.258Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,318][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=iilQ8dQfR8yB8aFoZ-yp_g], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.258Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,322][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,326][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=a_FWAuO7QUKxGfN07hiqyQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.258Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,330][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,331][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[19], restoring[test-repo:test-snap], s[INITIALIZING], a[id=a_FWAuO7QUKxGfN07hiqyQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.258Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,335][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=IfL2jcDzSfWNyCgO8pELIQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.257Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,343][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=IfL2jcDzSfWNyCgO8pELIQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.257Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,354][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,355][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Kxef9-wOQYSJJaR8ZbH-KA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.324Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,356][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,357][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=A9cymFEvS36tN0JH3m1Xgw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.270Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,366][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Kxef9-wOQYSJJaR8ZbH-KA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.324Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,366][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=A9cymFEvS36tN0JH3m1Xgw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.270Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,367][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][8]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,368][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PVB6NJikSr6kVbzrDbwaQQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.324Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][8]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][8]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,372][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][8] received shard failed for [test-idx][8], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PVB6NJikSr6kVbzrDbwaQQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.324Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,377][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,378][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=3yx7Z68qTGmtY8J3uFK8Ww], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.335Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,384][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,385][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=BfYEL8dDSXOTt8vOB3S0Sg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.355Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,401][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][4]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,402][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[21], restoring[test-repo:test-snap], s[INITIALIZING], a[id=3yx7Z68qTGmtY8J3uFK8Ww], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.335Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,403][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=BfYEL8dDSXOTt8vOB3S0Sg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.355Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,405][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,405][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=R-RkecPOQiC7Ridk_GdL_Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.367Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][4]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][4]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,408][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=OQ5pv0q_SjuwMDLaGHERoQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.367Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,410][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=OQ5pv0q_SjuwMDLaGHERoQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.367Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,415][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][4] received shard failed for [test-idx][4], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=R-RkecPOQiC7Ridk_GdL_Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.367Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,431][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,435][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QyE5kTKDQzuW_Y8li58cWg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.404Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,440][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[23], restoring[test-repo:test-snap], s[INITIALIZING], a[id=QyE5kTKDQzuW_Y8li58cWg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.404Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,441][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][0]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,445][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][0] received shard failed for [test-idx][0], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=YQzVBYDgQreK-tTHk4mgpg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.404Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[130], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][0]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][0]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,480][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,481][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Yn8BFa-STDCDZsK-bSM5AA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.418Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,494][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Yn8BFa-STDCDZsK-bSM5AA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.418Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,514][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,515][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UyHy6JNPRJWa2w9rnLsu6Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.466Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,536][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UyHy6JNPRJWa2w9rnLsu6Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.466Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,537][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[25], restoring[test-repo:test-snap], s[INITIALIZING], a[id=Yn8BFa-STDCDZsK-bSM5AA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.418Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,582][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,586][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UkDTqAYjQr2Ezr4j4_0YvA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.548Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,587][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UkDTqAYjQr2Ezr4j4_0YvA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.548Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,621][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UkDTqAYjQr2Ezr4j4_0YvA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.548Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,622][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,626][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[27], restoring[test-repo:test-snap], s[INITIALIZING], a[id=SAjJRJb0TfeLVler3Is0pw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.548Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,729][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,730][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[29], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UVozn5ccQ6qRyiQT-XH2uA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.649Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,732][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,733][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[29], restoring[test-repo:test-snap], s[INITIALIZING], a[id=kucsYaHWTD6XlP-UGojTEg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.649Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,740][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[29], restoring[test-repo:test-snap], s[INITIALIZING], a[id=kucsYaHWTD6XlP-UGojTEg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.649Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,741][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[29], restoring[test-repo:test-snap], s[INITIALIZING], a[id=UVozn5ccQ6qRyiQT-XH2uA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.649Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,805][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,809][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[31], restoring[test-repo:test-snap], s[INITIALIZING], a[id=mSJ_s8nUQbW3EphfOfOohw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.753Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,822][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,827][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[31], restoring[test-repo:test-snap], s[INITIALIZING], a[id=PlNTIvCpRn26zMuvA5FsBg], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.753Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,856][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,857][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[33], restoring[test-repo:test-snap], s[INITIALIZING], a[id=l2RcLsVxShqyP9o69uQBcA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.828Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,881][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][2]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,887][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[35], restoring[test-repo:test-snap], s[INITIALIZING], a[id=R57YP08wTGOo8YLdocbL7w], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.858Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][2]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][2]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,888][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[35], restoring[test-repo:test-snap], s[INITIALIZING], a[id=R57YP08wTGOo8YLdocbL7w], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.858Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,918][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,919][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[33], restoring[test-repo:test-snap], s[INITIALIZING], a[id=X9woTzf1T6-YRAQ9unsalA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.810Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,923][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[33], restoring[test-repo:test-snap], s[INITIALIZING], a[id=X9woTzf1T6-YRAQ9unsalA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.810Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,941][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][2] received shard failed for [test-idx][2], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[35], restoring[test-repo:test-snap], s[INITIALIZING], a[id=R57YP08wTGOo8YLdocbL7w], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.858Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:06,961][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[33], restoring[test-repo:test-snap], s[INITIALIZING], a[id=X9woTzf1T6-YRAQ9unsalA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.810Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,003][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,007][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[35], restoring[test-repo:test-snap], s[INITIALIZING], a[id=30QnQWboTDeDe3bNvs2Caw], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:06.969Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,026][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,027][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[37], restoring[test-repo:test-snap], s[INITIALIZING], a[id=2HcqzEQORKOpDozpp1y67w], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:07.008Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,043][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,047][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[39], restoring[test-repo:test-snap], s[INITIALIZING], a[id=1vDElgZPSHO0_V0-txT86Q], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:07.028Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,079][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,080][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[41], restoring[test-repo:test-snap], s[INITIALIZING], a[id=NwckQabRTQKIt3HGLYgzUA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:07.048Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,096][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[41], restoring[test-repo:test-snap], s[INITIALIZING], a[id=NwckQabRTQKIt3HGLYgzUA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:07.048Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [master {node_s0}{YU4rw4SiR5aBA7JFJFd8EQ}{local}{local[78]}[mode=>local] marked shard as initializing, but shard is marked as failed, resend shard failure], failure [Unknown]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,145][WARN ][org.elasticsearch.indices.cluster] [node_s1] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,149][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[BGl_MLcDTse8q5N9C0jt5A], [P], v[43], restoring[test-repo:test-snap], s[INITIALIZING], a[id=3wLR2TbCQNKj6o6E7FAyjQ], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:07.105Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: NotSerializableExceptionWrapper[Random IOException]%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,179][WARN ][org.elasticsearch.indices.cluster] [node_s0] [[test-idx][7]] marking and sending shard failed due to [failed recovery]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:07,180][WARN ][org.elasticsearch.cluster.action.shard] [node_s0] [test-idx][7] received shard failed for [test-idx][7], node[YU4rw4SiR5aBA7JFJFd8EQ], [P], v[45], restoring[test-repo:test-snap], s[INITIALIZING], a[id=pZxOXGPuTt63vcaT37c7XA], unassigned_info[[reason=ALLOCATION_FAILED], at[2016-03-31T06:02:07.150Z], details[failed recovery, failure IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: NotSerializableExceptionWrapper[Random IOException]; ]], expected_shard_size[0], indexUUID [4jpdB_g0RdurmlwQgV2n7w], message [failed recovery], failure [IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException]; ]%0A[test-idx][[test-idx][7]] IndexShardRecoveryException[failed recovery]; nested: IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:165)%0A%09at org.elasticsearch.index.shard.StoreRecovery.recoverFromRepository(StoreRecovery.java:97)%0A%09at org.elasticsearch.index.shard.IndexShard.restoreFromRepository(IndexShard.java:1110)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService.lambda$applyInitializingShard$128(IndicesClusterStateService.java:654)%0A%09at org.elasticsearch.indices.cluster.IndicesClusterStateService$$Lambda$561/1683367258.run(Unknown Source)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[restore failed]; nested: IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:265)%0A%09at org.elasticsearch.index.shard.StoreRecovery.lambda$recoverFromRepository$123(StoreRecovery.java:99)%0A%09at org.elasticsearch.index.shard.StoreRecovery$$Lambda$562/1148766141.run(Unknown Source)%0A%09at org.elasticsearch.index.shard.StoreRecovery.executeRecovery(StoreRecovery.java:122)%0A%09... 7 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[failed to restore snapshot [test-snap]]; nested: IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:208)%0A%09at org.elasticsearch.index.shard.StoreRecovery.restore(StoreRecovery.java:260)%0A%09... 10 more%0ACaused by: [test-idx][[test-idx][7]] IndexShardRestoreFailedException[Failed to recover index]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:867)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.restore(BlobStoreIndexShardRepository.java:206)%0A%09... 11 more%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.readBlob(MockRepository.java:321)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$PartSliceStream.openSlice(BlobStoreIndexShardRepository.java:769)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.nextStream(SlicedInputStream.java:53)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.currentStream(SlicedInputStream.java:67)%0A%09at org.elasticsearch.index.snapshots.blobstore.SlicedInputStream.read(SlicedInputStream.java:88)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:133)%0A%09at org.elasticsearch.index.snapshots.blobstore.RateLimitingInputStream.read(RateLimitingInputStream.java:69)%0A%09at java.io.FilterInputStream.read(FilterInputStream.java:107)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restoreFile(BlobStoreIndexShardRepository.java:924)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$RestoreContext.restore(BlobStoreIndexShardRepository.java:864)%0A%09... 12 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDataFileFailureDuringRestore(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404122293,
  "executionTime": 5912
 }
]

[
 "TEST_STARTED",
 "ID#testListCorruptedSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:09,887][WARN ][org.elasticsearch.snapshots] [node_s0] failed to get snapshot [test-repo:test-snap-2]%0Ajava.lang.IllegalStateException: class org.apache.lucene.store.BufferedChecksumIndexInput cannot seek backwards (pos=-15 getFilePointer()=0)%0A%09at org.apache.lucene.store.ChecksumIndexInput.seek(ChecksumIndexInput.java:50)%0A%09at org.apache.lucene.codecs.CodecUtil.checksumEntireFile(CodecUtil.java:448)%0A%09at org.elasticsearch.repositories.blobstore.ChecksumBlobStoreFormat.readBlob(ChecksumBlobStoreFormat.java:99)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreFormat.read(BlobStoreFormat.java:86)%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.readSnapshot(BlobStoreRepository.java:440)%0A%09at org.elasticsearch.snapshots.SnapshotsService.snapshots(SnapshotsService.java:154)%0A%09at org.elasticsearch.action.admin.cluster.snapshots.get.TransportGetSnapshotsAction.masterOperation(TransportGetSnapshotsAction.java:77)%0A%09at org.elasticsearch.action.admin.cluster.snapshots.get.TransportGetSnapshotsAction.masterOperation(TransportGetSnapshotsAction.java:46)%0A%09at org.elasticsearch.action.support.master.TransportMasterNodeAction$AsyncSingleAction$3.doRun(TransportMasterNodeAction.java:160)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testListCorruptedSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404128206,
  "executionTime": 2328
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteIndexDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteIndexDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404130534,
  "executionTime": 3247
 }
]

[
 "TEST_STARTED",
 "ID#testBasicWorkFlow(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testBasicWorkFlow(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404133781,
  "executionTime": 3121
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteRepositoryWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:17,802][WARN ][org.elasticsearch.repositories] [node_s0] failed to create repository [test-repo]%0Ajava.lang.IllegalStateException: trying to modify or unregister repository that is currently used %0A%09at org.elasticsearch.repositories.RepositoriesService.ensureRepositoryNotInUse(RepositoriesService.java:421)%0A%09at org.elasticsearch.repositories.RepositoriesService.access$000(RepositoriesService.java:60)%0A%09at org.elasticsearch.repositories.RepositoriesService$1.execute(RepositoriesService.java:113)%0A%09at org.elasticsearch.cluster.ClusterStateUpdateTask.execute(ClusterStateUpdateTask.java:45)%0A%09at org.elasticsearch.cluster.service.InternalClusterService.runTasksForExecutor(InternalClusterService.java:401)%0A%09at org.elasticsearch.cluster.service.InternalClusterService$UpdateTask.run(InternalClusterService.java:596)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.runAndClean(PrioritizedEsThreadPoolExecutor.java:231)%0A%09at org.elasticsearch.common.util.concurrent.PrioritizedEsThreadPoolExecutor$TieBreakingPrioritizedRunnable.run(PrioritizedEsThreadPoolExecutor.java:194)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteRepositoryWhileSnapshotting(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404136902,
  "executionTime": 2031
 }
]

[
 "TEST_STARTED",
 "ID#testUrlRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUrlRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404138933,
  "executionTime": 2304
 }
]

[
 "TEST_STARTED",
 "ID#testUnallocatedShards(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUnallocatedShards(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404141237,
  "executionTime": 201
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreWithDifferentMappingsAndSettings(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreWithDifferentMappingsAndSettings(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404141438,
  "executionTime": 2967
 }
]

[
 "TEST_STARTED",
 "ID#testReadonlyRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:27,418][WARN ][org.elasticsearch.snapshots] [node_s0] failed to create snapshot [readonly-repo:test-snap-2]%0ARepositoryException[[readonly-repo] cannot create snapshot in a readonly repository]%0A%09at org.elasticsearch.repositories.blobstore.BlobStoreRepository.initializeSnapshot(BlobStoreRepository.java:269)%0A%09at org.elasticsearch.snapshots.SnapshotsService.beginSnapshot(SnapshotsService.java:310)%0A%09at org.elasticsearch.snapshots.SnapshotsService.access$600(SnapshotsService.java:96)%0A%09at org.elasticsearch.snapshots.SnapshotsService$1$1.run(SnapshotsService.java:232)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testReadonlyRepository(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404144406,
  "executionTime": 3788
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotClosedIndex(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404148194,
  "executionTime": 1247
 }
]

[
 "TEST_STARTED",
 "ID#testDataFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,679][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][4]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][4]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,680][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][3]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][3]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,686][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][2]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][2]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,689][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][5]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][5]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,721][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][8]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][8]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,721][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][7]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][7]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,731][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][6]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][6]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,740][WARN ][org.elasticsearch.snapshots] [node_s1] [[test-idx][1]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][1]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:02:31,757][WARN ][org.elasticsearch.snapshots] [node_s0] [[test-idx][0]] [test-repo:test-snap] failed to create snapshot%0A[test-idx][[test-idx][0]] IndexShardSnapshotFailedException[Failed to perform snapshot (index files)]; nested: IOException[Random IOException];%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:601)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository.snapshot(BlobStoreIndexShardRepository.java:184)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.snapshot(SnapshotShardsService.java:344)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService.access$200(SnapshotShardsService.java:80)%0A%09at org.elasticsearch.snapshots.SnapshotShardsService$1.doRun(SnapshotShardsService.java:300)%0A%09at org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:37)%0A%09at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)%0A%09at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)%0A%09at java.lang.Thread.run(Thread.java:745)%0ACaused by: java.io.IOException: Random IOException%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.maybeIOExceptionOrBlock(MockRepository.java:277)%0A%09at org.elasticsearch.snapshots.mockstore.MockRepository$MockBlobStore$MockBlobContainer.writeBlob(MockRepository.java:363)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshotFile(BlobStoreIndexShardRepository.java:653)%0A%09at org.elasticsearch.index.snapshots.blobstore.BlobStoreIndexShardRepository$SnapshotContext.snapshot(BlobStoreIndexShardRepository.java:599)%0A%09... 8 more%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDataFileFailureDuringSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404149442,
  "executionTime": 3800
 }
]

[
 "TEST_STARTED",
 "ID#testIncludeGlobalState(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIncludeGlobalState(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404153242,
  "executionTime": 2660
 }
]

[
 "TEST_STARTED",
 "ID#testRestoreAliases(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRestoreAliases(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404155903,
  "executionTime": 10559
 }
]

[
 "TEST_STARTED",
 "ID#testThrottling(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThrottling(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404166462,
  "executionTime": 35957
 }
]

[
 "TEST_STARTED",
 "ID#testDeleteOrphanSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testDeleteOrphanSnapshot(org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT)",
  "startTimestamp": 1459404202420,
  "executionTime": 1145
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SharedClusterSnapshotRestoreIT",
  "startTimestamp": 1459404019054,
  "executionTime": 188320
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.query.SimpleQueryStringIT",
   "displayName": "org.elasticsearch.search.query.SimpleQueryStringIT",
   "methodName": null,
   "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
   "children": [
    {
     "id": "ID#testLenientFlagBeingTooLenient(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testLenientFlagBeingTooLenient(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testLenientFlagBeingTooLenient",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryStringFlags(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testSimpleQueryStringFlags(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testSimpleQueryStringFlags",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryStringLenient(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testSimpleQueryStringLenient(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testSimpleQueryStringLenient",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testNestedFieldSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testNestedFieldSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testNestedFieldSimpleQueryString",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryStringAnalyzeWildcard(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testSimpleQueryStringAnalyzeWildcard(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testSimpleQueryStringAnalyzeWildcard",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testSimpleQueryString",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testQueryStringLocale(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testQueryStringLocale(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testQueryStringLocale",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryStringMinimumShouldMatch(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testSimpleQueryStringMinimumShouldMatch(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testSimpleQueryStringMinimumShouldMatch",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    },
    {
     "id": "ID#testSimpleQueryStringLowercasing(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "displayName": "testSimpleQueryStringLowercasing(org.elasticsearch.search.query.SimpleQueryStringIT)",
     "methodName": "testSimpleQueryStringLowercasing",
     "className": "org.elasticsearch.search.query.SimpleQueryStringIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404207388
 }
]

[
 "TEST_STARTED",
 "ID#testLenientFlagBeingTooLenient(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testLenientFlagBeingTooLenient(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404207415,
  "executionTime": 2322
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryStringFlags(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryStringFlags(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404209737,
  "executionTime": 1043
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryStringLenient(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryStringLenient(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404210781,
  "executionTime": 2634
 }
]

[
 "TEST_STARTED",
 "ID#testNestedFieldSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testNestedFieldSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404213415,
  "executionTime": 931
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryStringAnalyzeWildcard(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryStringAnalyzeWildcard(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404214347,
  "executionTime": 609
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryString(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404214956,
  "executionTime": 1346
 }
]

[
 "TEST_STARTED",
 "ID#testQueryStringLocale(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testQueryStringLocale(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404216302,
  "executionTime": 1219
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryStringMinimumShouldMatch(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryStringMinimumShouldMatch(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404217521,
  "executionTime": 2567
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleQueryStringLowercasing(org.elasticsearch.search.query.SimpleQueryStringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleQueryStringLowercasing(org.elasticsearch.search.query.SimpleQueryStringIT)",
  "startTimestamp": 1459404220088,
  "executionTime": 1884
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:41,989][WARN ][org.elasticsearch.test.transport] [node_s1] Transport response handler not found of id [356]%0A"
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.query.SimpleQueryStringIT",
  "startTimestamp": 1459404207388,
  "executionTime": 14649
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT",
   "displayName": "org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT",
   "methodName": null,
   "className": "org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT",
   "children": [
    {
     "id": "ID#testPendingTasksWithBlocks(org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT)",
     "displayName": "testPendingTasksWithBlocks(org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT)",
     "methodName": "testPendingTasksWithBlocks",
     "className": "org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404222050
 }
]

[
 "TEST_STARTED",
 "ID#testPendingTasksWithBlocks(org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testPendingTasksWithBlocks(org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT)",
  "startTimestamp": 1459404222089,
  "executionTime": 560
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.action.admin.cluster.tasks.PendingTasksBlocksIT",
  "startTimestamp": 1459404222050,
  "executionTime": 606
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT",
   "displayName": "org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT",
   "methodName": null,
   "className": "org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT",
   "children": [
    {
     "id": "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
     "displayName": "testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
     "methodName": "testSnapshotMoreThanOnce",
     "className": "org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT",
     "children": []
    },
    {
     "id": "ID#testSnapshotAndRestore(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
     "displayName": "testSnapshotAndRestore(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
     "methodName": "testSnapshotAndRestore",
     "className": "org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404222671
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)"
]

[
 "TEST_IGNORED",
 {
  "description": "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
  "startTimestamp": 1459404222673,
  "cause": "Unknown reason for ignore status."
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
  "message": "'backwards' test group is disabled (@Backwards())",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'backwards' test group is disabled (@Backwards())\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.isTestIgnored(RandomizedRunner.java:1231)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:665)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$200(RandomizedRunner.java:141)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:588)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'backwards' test group is disabled (@Backwards())",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotMoreThanOnce(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
  "startTimestamp": 1459404222673,
  "executionTime": 1
 }
]

[
 "TEST_STARTED",
 "ID#testSnapshotAndRestore(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)"
]

[
 "TEST_IGNORED",
 {
  "description": "ID#testSnapshotAndRestore(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
  "startTimestamp": 1459404222674,
  "cause": "Unknown reason for ignore status."
 }
]

[
 "TEST_IGNORED_ASSUMPTION",
 {
  "description": "ID#testSnapshotAndRestore(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
  "message": "'backwards' test group is disabled (@Backwards())",
  "trace": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'backwards' test group is disabled (@Backwards())\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.isTestIgnored(RandomizedRunner.java:1231)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.runSuite(RandomizedRunner.java:665)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner.access$200(RandomizedRunner.java:141)\n\tat com.carrotsearch.randomizedtesting.RandomizedRunner$2.run(RandomizedRunner.java:588)\n",
  "throwableString": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException: 'backwards' test group is disabled (@Backwards())",
  "throwableClass": "com.carrotsearch.randomizedtesting.InternalAssumptionViolatedException",
  "assertionViolation": false,
  "assumptionViolation": true
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSnapshotAndRestore(org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT)",
  "startTimestamp": 1459404222674,
  "executionTime": 0
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.snapshots.SnapshotBackwardsCompatibilityIT",
  "startTimestamp": 1459404222671,
  "executionTime": 4
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.geo.GeoPolygonIT",
   "displayName": "org.elasticsearch.search.geo.GeoPolygonIT",
   "methodName": null,
   "className": "org.elasticsearch.search.geo.GeoPolygonIT",
   "children": [
    {
     "id": "ID#testSimpleUnclosedPolygon(org.elasticsearch.search.geo.GeoPolygonIT)",
     "displayName": "testSimpleUnclosedPolygon(org.elasticsearch.search.geo.GeoPolygonIT)",
     "methodName": "testSimpleUnclosedPolygon",
     "className": "org.elasticsearch.search.geo.GeoPolygonIT",
     "children": []
    },
    {
     "id": "ID#testSimplePolygon(org.elasticsearch.search.geo.GeoPolygonIT)",
     "displayName": "testSimplePolygon(org.elasticsearch.search.geo.GeoPolygonIT)",
     "methodName": "testSimplePolygon",
     "className": "org.elasticsearch.search.geo.GeoPolygonIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404222686
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleUnclosedPolygon(org.elasticsearch.search.geo.GeoPolygonIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleUnclosedPolygon(org.elasticsearch.search.geo.GeoPolygonIT)",
  "startTimestamp": 1459404223511,
  "executionTime": 94
 }
]

[
 "TEST_STARTED",
 "ID#testSimplePolygon(org.elasticsearch.search.geo.GeoPolygonIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimplePolygon(org.elasticsearch.search.geo.GeoPolygonIT)",
  "startTimestamp": 1459404223605,
  "executionTime": 20
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.geo.GeoPolygonIT",
  "startTimestamp": 1459404222686,
  "executionTime": 1046
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.template.IndexTemplateBlocksIT",
   "displayName": "org.elasticsearch.indices.template.IndexTemplateBlocksIT",
   "methodName": null,
   "className": "org.elasticsearch.indices.template.IndexTemplateBlocksIT",
   "children": [
    {
     "id": "ID#testIndexTemplatesWithBlocks(org.elasticsearch.indices.template.IndexTemplateBlocksIT)",
     "displayName": "testIndexTemplatesWithBlocks(org.elasticsearch.indices.template.IndexTemplateBlocksIT)",
     "methodName": "testIndexTemplatesWithBlocks",
     "className": "org.elasticsearch.indices.template.IndexTemplateBlocksIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404223744
 }
]

[
 "TEST_STARTED",
 "ID#testIndexTemplatesWithBlocks(org.elasticsearch.indices.template.IndexTemplateBlocksIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndexTemplatesWithBlocks(org.elasticsearch.indices.template.IndexTemplateBlocksIT)",
  "startTimestamp": 1459404223768,
  "executionTime": 277
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.template.IndexTemplateBlocksIT",
  "startTimestamp": 1459404223744,
  "executionTime": 311
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.template.IndexTemplateFilteringIT",
   "displayName": "org.elasticsearch.indices.template.IndexTemplateFilteringIT",
   "methodName": null,
   "className": "org.elasticsearch.indices.template.IndexTemplateFilteringIT",
   "children": [
    {
     "id": "ID#testTemplateFiltering(org.elasticsearch.indices.template.IndexTemplateFilteringIT)",
     "displayName": "testTemplateFiltering(org.elasticsearch.indices.template.IndexTemplateFilteringIT)",
     "methodName": "testTemplateFiltering",
     "className": "org.elasticsearch.indices.template.IndexTemplateFilteringIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404224065
 }
]

[
 "TEST_STARTED",
 "ID#testTemplateFiltering(org.elasticsearch.indices.template.IndexTemplateFilteringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testTemplateFiltering(org.elasticsearch.indices.template.IndexTemplateFilteringIT)",
  "startTimestamp": 1459404224084,
  "executionTime": 1833
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.template.IndexTemplateFilteringIT",
  "startTimestamp": 1459404224065,
  "executionTime": 1885
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.get.GetActionIT",
   "displayName": "org.elasticsearch.get.GetActionIT",
   "methodName": null,
   "className": "org.elasticsearch.get.GetActionIT",
   "children": [
    {
     "id": "ID#testGeneratedNumberFieldsUnstored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGeneratedNumberFieldsUnstored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGeneratedNumberFieldsUnstored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testUngeneratedFieldsThatAreNeverStored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testUngeneratedFieldsThatAreNeverStored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testUngeneratedFieldsThatAreNeverStored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGetFieldsMetaData(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGetFieldsMetaData(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGetFieldsMetaData",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testThatGetFromTranslogShouldWorkWithIncludeBackcompat(org.elasticsearch.get.GetActionIT)",
     "displayName": "testThatGetFromTranslogShouldWorkWithIncludeBackcompat(org.elasticsearch.get.GetActionIT)",
     "methodName": "testThatGetFromTranslogShouldWorkWithIncludeBackcompat",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGeneratedNumberFieldsStored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGeneratedNumberFieldsStored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGeneratedNumberFieldsStored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testUngeneratedFieldsThatAreAlwaysStored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testUngeneratedFieldsThatAreAlwaysStored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testUngeneratedFieldsThatAreAlwaysStored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testUngeneratedFieldsPartOfSourceUnstoredSourceDisabledBackcompat(org.elasticsearch.get.GetActionIT)",
     "displayName": "testUngeneratedFieldsPartOfSourceUnstoredSourceDisabledBackcompat(org.elasticsearch.get.GetActionIT)",
     "methodName": "testUngeneratedFieldsPartOfSourceUnstoredSourceDisabledBackcompat",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testSimpleGet(org.elasticsearch.get.GetActionIT)",
     "displayName": "testSimpleGet(org.elasticsearch.get.GetActionIT)",
     "methodName": "testSimpleGet",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testSimpleMultiGet(org.elasticsearch.get.GetActionIT)",
     "displayName": "testSimpleMultiGet(org.elasticsearch.get.GetActionIT)",
     "methodName": "testSimpleMultiGet",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGeneratedStringFieldsUnstored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGeneratedStringFieldsUnstored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGeneratedStringFieldsUnstored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testUngeneratedFieldsNotPartOfSourceStored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testUngeneratedFieldsNotPartOfSourceStored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testUngeneratedFieldsNotPartOfSourceStored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabledBackcompat(org.elasticsearch.get.GetActionIT)",
     "displayName": "testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabledBackcompat(org.elasticsearch.get.GetActionIT)",
     "methodName": "testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabledBackcompat",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGetFieldsComplexField(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGetFieldsComplexField(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGetFieldsComplexField",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGetAllField(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGetAllField(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGetAllField",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGetDocWithMultivaluedFields(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGetDocWithMultivaluedFields(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGetDocWithMultivaluedFields",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGetFieldsNonLeafField(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGetFieldsNonLeafField(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGetFieldsNonLeafField",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testThatGetFromTranslogShouldWorkWithExcludeBackcompat(org.elasticsearch.get.GetActionIT)",
     "displayName": "testThatGetFromTranslogShouldWorkWithExcludeBackcompat(org.elasticsearch.get.GetActionIT)",
     "methodName": "testThatGetFromTranslogShouldWorkWithExcludeBackcompat",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGetWithVersion(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGetWithVersion(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGetWithVersion",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testGeneratedStringFieldsStored(org.elasticsearch.get.GetActionIT)",
     "displayName": "testGeneratedStringFieldsStored(org.elasticsearch.get.GetActionIT)",
     "methodName": "testGeneratedStringFieldsStored",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFieldsBackcompat(org.elasticsearch.get.GetActionIT)",
     "displayName": "testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFieldsBackcompat(org.elasticsearch.get.GetActionIT)",
     "methodName": "testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFieldsBackcompat",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testMultiGetWithVersion(org.elasticsearch.get.GetActionIT)",
     "displayName": "testMultiGetWithVersion(org.elasticsearch.get.GetActionIT)",
     "methodName": "testMultiGetWithVersion",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    },
    {
     "id": "ID#testRealtimeGetWithCompressBackcompat(org.elasticsearch.get.GetActionIT)",
     "displayName": "testRealtimeGetWithCompressBackcompat(org.elasticsearch.get.GetActionIT)",
     "methodName": "testRealtimeGetWithCompressBackcompat",
     "className": "org.elasticsearch.get.GetActionIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404225968
 }
]

[
 "TEST_STARTED",
 "ID#testGeneratedNumberFieldsUnstored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeneratedNumberFieldsUnstored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404226002,
  "executionTime": 823
 }
]

[
 "TEST_STARTED",
 "ID#testUngeneratedFieldsThatAreNeverStored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUngeneratedFieldsThatAreNeverStored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404226826,
  "executionTime": 667
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldsMetaData(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldsMetaData(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404227494,
  "executionTime": 537
 }
]

[
 "TEST_STARTED",
 "ID#testThatGetFromTranslogShouldWorkWithIncludeBackcompat(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatGetFromTranslogShouldWorkWithIncludeBackcompat(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404228032,
  "executionTime": 1270
 }
]

[
 "TEST_STARTED",
 "ID#testGeneratedNumberFieldsStored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeneratedNumberFieldsStored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404229302,
  "executionTime": 978
 }
]

[
 "TEST_STARTED",
 "ID#testUngeneratedFieldsThatAreAlwaysStored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUngeneratedFieldsThatAreAlwaysStored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404230280,
  "executionTime": 675
 }
]

[
 "TEST_STARTED",
 "ID#testUngeneratedFieldsPartOfSourceUnstoredSourceDisabledBackcompat(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUngeneratedFieldsPartOfSourceUnstoredSourceDisabledBackcompat(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404230955,
  "executionTime": 437
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleGet(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleGet(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404231392,
  "executionTime": 686
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleMultiGet(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleMultiGet(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404232078,
  "executionTime": 463
 }
]

[
 "TEST_STARTED",
 "ID#testGeneratedStringFieldsUnstored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeneratedStringFieldsUnstored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404232541,
  "executionTime": 426
 }
]

[
 "TEST_STARTED",
 "ID#testUngeneratedFieldsNotPartOfSourceStored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUngeneratedFieldsNotPartOfSourceStored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404232967,
  "executionTime": 1129
 }
]

[
 "TEST_STARTED",
 "ID#testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabledBackcompat(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testUngeneratedFieldsPartOfSourceEitherStoredOrSourceEnabledBackcompat(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404234096,
  "executionTime": 1062
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldsComplexField(org.elasticsearch.get.GetActionIT)"
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,167][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [delete_repository [*]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,167][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,167][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,168][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [create-index-template [random_index_template], cause [api]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,168][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index-template [random_index_template], cause [api]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,168][TRACE][org.elasticsearch.cluster.service] [node_s0] cluster state updated, source [create-index-template [random_index_template], cause [api]]%0Aversion: 87%0Astate uuid: 1hFScok-TfCeku93k-ah9g%0Afrom_diff: false%0Ameta data version: 86%0Anodes: %0A   {node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local], local, master%0Arouting_table (version 53):%0Arouting_nodes:%0A-----node_id[8UD5xsARSSKe-5DT2dVJkg][V]%0A---- unassigned%0A%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,169][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [87]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,169][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 87%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,182][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index-template [random_index_template], cause [api]]: took 14ms done applying updated cluster_state (version: 87, uuid: 1hFScok-TfCeku93k-ah9g)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,183][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [create-index [my-index], cause [api]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,183][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index [my-index], cause [api]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,189][TRACE][org.elasticsearch.cluster.service] expecting 1 acknowledgements for cluster_state update (version: 88)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,192][TRACE][org.elasticsearch.cluster.service] [node_s0] cluster state updated, source [create-index [my-index], cause [api]]%0Aversion: 88%0Astate uuid: Y-2V82Z5QVeqRfaLJXHTsA%0Afrom_diff: false%0Ameta data version: 87%0Anodes: %0A   {node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local], local, master%0Arouting_table (version 54):%0A-- index [my-index]%0A----shard_id [my-index][0]%0A--------[my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=jppCC8pvR0y-VAS0m5hQaA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]%0A----shard_id [my-index][1]%0A--------[my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=sFOWuiomTNuXPukr_-5T7g], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]%0A----shard_id [my-index][2]%0A--------[my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=7pou_NpbRwSv5PB1AUQxsg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]%0A%0Arouting_nodes:%0A-----node_id[8UD5xsARSSKe-5DT2dVJkg][V]%0A--------[my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=sFOWuiomTNuXPukr_-5T7g], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]%0A--------[my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=7pou_NpbRwSv5PB1AUQxsg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]%0A--------[my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=jppCC8pvR0y-VAS0m5hQaA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]%0A---- unassigned%0A%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,192][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [88]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,192][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 88%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,280][TRACE][org.elasticsearch.cluster.service] ack received from node [{node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local]], cluster_state update (version: 88)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,281][TRACE][org.elasticsearch.cluster.service] all expected nodes acknowledged cluster_state update (version: 88)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,282][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [create-index [my-index], cause [api]]: took 98ms done applying updated cluster_state (version: 88, uuid: Y-2V82Z5QVeqRfaLJXHTsA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,282][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [shard-started ([my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=sFOWuiomTNuXPukr_-5T7g], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,282][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [shard-started ([my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=7pou_NpbRwSv5PB1AUQxsg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,283][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [shard-started ([my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=jppCC8pvR0y-VAS0m5hQaA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,283][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=sFOWuiomTNuXPukr_-5T7g], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store],shard-started ([my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=7pou_NpbRwSv5PB1AUQxsg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store],shard-started ([my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=jppCC8pvR0y-VAS0m5hQaA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,284][TRACE][org.elasticsearch.cluster.service] [node_s0] cluster state updated, source [shard-started ([my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=sFOWuiomTNuXPukr_-5T7g], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store],shard-started ([my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=7pou_NpbRwSv5PB1AUQxsg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store],shard-started ([my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=jppCC8pvR0y-VAS0m5hQaA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store]]%0Aversion: 89%0Astate uuid: FdB88psuQXK3w6ivORA4wg%0Afrom_diff: false%0Ameta data version: 88%0Anodes: %0A   {node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local], local, master%0Arouting_table (version 55):%0A-- index [my-index]%0A----shard_id [my-index][0]%0A--------[my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=jppCC8pvR0y-VAS0m5hQaA]%0A----shard_id [my-index][1]%0A--------[my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=sFOWuiomTNuXPukr_-5T7g]%0A----shard_id [my-index][2]%0A--------[my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=7pou_NpbRwSv5PB1AUQxsg]%0A%0Arouting_nodes:%0A-----node_id[8UD5xsARSSKe-5DT2dVJkg][V]%0A--------[my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=sFOWuiomTNuXPukr_-5T7g]%0A--------[my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=7pou_NpbRwSv5PB1AUQxsg]%0A--------[my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=jppCC8pvR0y-VAS0m5hQaA]%0A---- unassigned%0A%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,284][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [89]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,285][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 89%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,316][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [shard-started ([my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=sFOWuiomTNuXPukr_-5T7g], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store],shard-started ([my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=7pou_NpbRwSv5PB1AUQxsg], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store],shard-started ([my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[1], s[INITIALIZING], a[id=jppCC8pvR0y-VAS0m5hQaA], unassigned_info[[reason=INDEX_CREATED], at[2016-03-31T06:03:55.188Z]]), reason [after recovery from store]]: took 32ms done applying updated cluster_state (version: 89, uuid: FdB88psuQXK3w6ivORA4wg)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,318][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [put-mapping [my-type1]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,318][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put-mapping [my-type1]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,321][TRACE][org.elasticsearch.cluster.service] expecting 1 acknowledgements for cluster_state update (version: 90)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,321][TRACE][org.elasticsearch.cluster.service] [node_s0] cluster state updated, source [put-mapping [my-type1]]%0Aversion: 90%0Astate uuid: _CM8SyntTe-ZSaZ4vxgYHA%0Afrom_diff: false%0Ameta data version: 89%0Anodes: %0A   {node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local], local, master%0Arouting_table (version 55):%0A-- index [my-index]%0A----shard_id [my-index][0]%0A--------[my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=jppCC8pvR0y-VAS0m5hQaA]%0A----shard_id [my-index][1]%0A--------[my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=sFOWuiomTNuXPukr_-5T7g]%0A----shard_id [my-index][2]%0A--------[my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=7pou_NpbRwSv5PB1AUQxsg]%0A%0Arouting_nodes:%0A-----node_id[8UD5xsARSSKe-5DT2dVJkg][V]%0A--------[my-index][1], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=sFOWuiomTNuXPukr_-5T7g]%0A--------[my-index][2], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=7pou_NpbRwSv5PB1AUQxsg]%0A--------[my-index][0], node[8UD5xsARSSKe-5DT2dVJkg], [P], v[2], s[STARTED], a[id=jppCC8pvR0y-VAS0m5hQaA]%0A---- unassigned%0A%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,321][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,321][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 90%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,345][TRACE][org.elasticsearch.cluster.service] ack received from node [{node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local]], cluster_state update (version: 90)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,345][TRACE][org.elasticsearch.cluster.service] all expected nodes acknowledged cluster_state update (version: 90)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,345][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [put-mapping [my-type1]]: took 26ms done applying updated cluster_state (version: 90, uuid: _CM8SyntTe-ZSaZ4vxgYHA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,358][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [cluster_health (wait_for_events [LANGUID])]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,358][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_health (wait_for_events [LANGUID])]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,358][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [cluster_health (wait_for_events [LANGUID])]: took 0s no change in cluster_state%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,359][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] send action [indices:admin/flush[s][p]] on primary [[my-index][1]] for request [flush {[my-index][1]}] with cluster state version [90] to [8UD5xsARSSKe-5DT2dVJkg] %0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,359][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] send action [indices:admin/flush[s][p]] on primary [[my-index][2]] for request [flush {[my-index][2]}] with cluster state version [90] to [8UD5xsARSSKe-5DT2dVJkg] %0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,359][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] send action [indices:admin/flush[s][p]] on primary [[my-index][0]] for request [flush {[my-index][0]}] with cluster state version [90] to [8UD5xsARSSKe-5DT2dVJkg] %0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,378][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] [my-index][1] flush request executed on primary%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,379][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] action [indices:admin/flush[s][p]] completed on shard [[my-index][1]] for request [flush {[my-index][1]}] with cluster state version [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,379][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] replication phase started. pending [0], action [indices:admin/flush[s][r]], request [flush {[my-index][1]}], cluster state version used [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,379][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] operation succeeded. action [indices:admin/flush[s]],request [flush {[my-index][1]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,379][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] indices:admin/flush: got response from [my-index][1]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,379][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] action [indices:admin/flush[s][r]] completed on all replicas [[my-index][1]] for request [flush {[my-index][1]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,476][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] [my-index][2] flush request executed on primary%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,476][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] action [indices:admin/flush[s][p]] completed on shard [[my-index][2]] for request [flush {[my-index][2]}] with cluster state version [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,476][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] replication phase started. pending [0], action [indices:admin/flush[s][r]], request [flush {[my-index][2]}], cluster state version used [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,476][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] operation succeeded. action [indices:admin/flush[s]],request [flush {[my-index][2]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,476][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] indices:admin/flush: got response from [my-index][2]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,476][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] action [indices:admin/flush[s][r]] completed on all replicas [[my-index][2]] for request [flush {[my-index][2]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] [my-index][0] flush request executed on primary%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] action [indices:admin/flush[s][p]] completed on shard [[my-index][0]] for request [flush {[my-index][0]}] with cluster state version [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] replication phase started. pending [0], action [indices:admin/flush[s][r]], request [flush {[my-index][0]}], cluster state version used [90]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] operation succeeded. action [indices:admin/flush[s]],request [flush {[my-index][0]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] indices:admin/flush: got response from [my-index][0]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] indices:admin/flush: got all shard responses%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,490][TRACE][org.elasticsearch.action.admin.indices.flush] [node_s0] action [indices:admin/flush[s][r]] completed on all replicas [[my-index][0]] for request [flush {[my-index][0]}]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,498][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [delete-index [my-index]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,498][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete-index [my-index]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,498][TRACE][org.elasticsearch.cluster.service] [node_s0] cluster state updated, source [delete-index [my-index]]%0Aversion: 91%0Astate uuid: 7FHrmPYORqOhllZOFA23SA%0Afrom_diff: false%0Ameta data version: 90%0Anodes: %0A   {node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local], local, master%0Arouting_table (version 56):%0Arouting_nodes:%0A-----node_id[8UD5xsARSSKe-5DT2dVJkg][V]%0A---- unassigned%0A%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,498][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [91]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,498][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 91%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,628][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete-index [my-index]]: took 129ms done applying updated cluster_state (version: 91, uuid: 7FHrmPYORqOhllZOFA23SA)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,628][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [remove-index-template [random_index_template]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,628][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [remove-index-template [random_index_template]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,628][TRACE][org.elasticsearch.cluster.service] [node_s0] cluster state updated, source [remove-index-template [random_index_template]]%0Aversion: 92%0Astate uuid: aWpN8b7ASRO-gjxA5WBGcw%0Afrom_diff: false%0Ameta data version: 91%0Anodes: %0A   {node_s0}{8UD5xsARSSKe-5DT2dVJkg}{local}{local[108]}[mode=>local], local, master%0Arouting_table (version 56):%0Arouting_nodes:%0A-----node_id[8UD5xsARSSKe-5DT2dVJkg][V]%0A---- unassigned%0A%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,628][DEBUG][org.elasticsearch.cluster.service] [node_s0] publishing cluster state version [92]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,628][DEBUG][org.elasticsearch.cluster.service] [node_s0] set local cluster state to version 92%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,643][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [remove-index-template [random_index_template]]: took 14ms done applying updated cluster_state (version: 92, uuid: aWpN8b7ASRO-gjxA5WBGcw)%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,643][TRACE][org.elasticsearch.cluster.service] [node_s0] will process [delete_repository [*]]%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,643][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: execute%0A"
 }
]

[
 "APPEND_STDOUT",
 {
  "chunk": "[2016-03-30 23:03:55,643][DEBUG][org.elasticsearch.cluster.service] [node_s0] processing [delete_repository [*]]: took 0s no change in cluster_state%0A"
 }
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldsComplexField(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404235158,
  "executionTime": 485
 }
]

[
 "TEST_STARTED",
 "ID#testGetAllField(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetAllField(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404235644,
  "executionTime": 1181
 }
]

[
 "TEST_STARTED",
 "ID#testGetDocWithMultivaluedFields(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetDocWithMultivaluedFields(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404236826,
  "executionTime": 420
 }
]

[
 "TEST_STARTED",
 "ID#testGetFieldsNonLeafField(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetFieldsNonLeafField(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404237247,
  "executionTime": 383
 }
]

[
 "TEST_STARTED",
 "ID#testThatGetFromTranslogShouldWorkWithExcludeBackcompat(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatGetFromTranslogShouldWorkWithExcludeBackcompat(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404237630,
  "executionTime": 385
 }
]

[
 "TEST_STARTED",
 "ID#testGetWithVersion(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGetWithVersion(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404238015,
  "executionTime": 509
 }
]

[
 "TEST_STARTED",
 "ID#testGeneratedStringFieldsStored(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testGeneratedStringFieldsStored(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404238524,
  "executionTime": 679
 }
]

[
 "TEST_STARTED",
 "ID#testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFieldsBackcompat(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testThatGetFromTranslogShouldWorkWithIncludeExcludeAndFieldsBackcompat(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404239204,
  "executionTime": 410
 }
]

[
 "TEST_STARTED",
 "ID#testMultiGetWithVersion(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testMultiGetWithVersion(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404239614,
  "executionTime": 652
 }
]

[
 "TEST_STARTED",
 "ID#testRealtimeGetWithCompressBackcompat(org.elasticsearch.get.GetActionIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testRealtimeGetWithCompressBackcompat(org.elasticsearch.get.GetActionIT)",
  "startTimestamp": 1459404240266,
  "executionTime": 379
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.get.GetActionIT",
  "startTimestamp": 1459404225968,
  "executionTime": 14718
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indices.exists.indices.IndicesExistsIT",
   "displayName": "org.elasticsearch.indices.exists.indices.IndicesExistsIT",
   "methodName": null,
   "className": "org.elasticsearch.indices.exists.indices.IndicesExistsIT",
   "children": [
    {
     "id": "ID#testIndicesExistsWithBlocks(org.elasticsearch.indices.exists.indices.IndicesExistsIT)",
     "displayName": "testIndicesExistsWithBlocks(org.elasticsearch.indices.exists.indices.IndicesExistsIT)",
     "methodName": "testIndicesExistsWithBlocks",
     "className": "org.elasticsearch.indices.exists.indices.IndicesExistsIT",
     "children": []
    },
    {
     "id": "ID#testIndicesExists(org.elasticsearch.indices.exists.indices.IndicesExistsIT)",
     "displayName": "testIndicesExists(org.elasticsearch.indices.exists.indices.IndicesExistsIT)",
     "methodName": "testIndicesExists",
     "className": "org.elasticsearch.indices.exists.indices.IndicesExistsIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404240696
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesExistsWithBlocks(org.elasticsearch.indices.exists.indices.IndicesExistsIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesExistsWithBlocks(org.elasticsearch.indices.exists.indices.IndicesExistsIT)",
  "startTimestamp": 1459404240723,
  "executionTime": 2249
 }
]

[
 "TEST_STARTED",
 "ID#testIndicesExists(org.elasticsearch.indices.exists.indices.IndicesExistsIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testIndicesExists(org.elasticsearch.indices.exists.indices.IndicesExistsIT)",
  "startTimestamp": 1459404242973,
  "executionTime": 4658
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.indices.exists.indices.IndicesExistsIT",
  "startTimestamp": 1459404240696,
  "executionTime": 6967
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.cluster.settings.SettingsFilteringIT",
   "displayName": "org.elasticsearch.cluster.settings.SettingsFilteringIT",
   "methodName": null,
   "className": "org.elasticsearch.cluster.settings.SettingsFilteringIT",
   "children": [
    {
     "id": "ID#testSettingsFiltering(org.elasticsearch.cluster.settings.SettingsFilteringIT)",
     "displayName": "testSettingsFiltering(org.elasticsearch.cluster.settings.SettingsFilteringIT)",
     "methodName": "testSettingsFiltering",
     "className": "org.elasticsearch.cluster.settings.SettingsFilteringIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404247672
 }
]

[
 "TEST_STARTED",
 "ID#testSettingsFiltering(org.elasticsearch.cluster.settings.SettingsFilteringIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSettingsFiltering(org.elasticsearch.cluster.settings.SettingsFilteringIT)",
  "startTimestamp": 1459404247690,
  "executionTime": 806
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.cluster.settings.SettingsFilteringIT",
  "startTimestamp": 1459404247672,
  "executionTime": 848
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.search.aggregations.bucket.FiltersIT",
   "displayName": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
   "methodName": null,
   "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
   "children": [
    {
     "id": "ID#testWithContextBasedSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testWithContextBasedSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testWithContextBasedSubAggregation",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testWithSubAggregation",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testOtherWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testOtherWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testOtherWithSubAggregation",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testSimpleNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testSimpleNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testSimpleNonKeyed",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testEmptyAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testEmptyAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testEmptyAggregation",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testOtherNamedBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testOtherNamedBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testOtherNamedBucket",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testOtherBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testOtherBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testOtherBucket",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testSimple(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testSimple(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testSimple",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testOtherNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testOtherNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testOtherNonKeyed",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    },
    {
     "id": "ID#testEmptyFilterDeclarations(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "displayName": "testEmptyFilterDeclarations(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
     "methodName": "testEmptyFilterDeclarations",
     "className": "org.elasticsearch.search.aggregations.bucket.FiltersIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404248530
 }
]

[
 "TEST_STARTED",
 "ID#testWithContextBasedSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithContextBasedSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252054,
  "executionTime": 24
 }
]

[
 "TEST_STARTED",
 "ID#testWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252078,
  "executionTime": 32
 }
]

[
 "TEST_STARTED",
 "ID#testOtherWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherWithSubAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252111,
  "executionTime": 30
 }
]

[
 "TEST_STARTED",
 "ID#testSimpleNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimpleNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252141,
  "executionTime": 28
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyAggregation(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252170,
  "executionTime": 17
 }
]

[
 "TEST_STARTED",
 "ID#testOtherNamedBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherNamedBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252187,
  "executionTime": 57
 }
]

[
 "TEST_STARTED",
 "ID#testOtherBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherBucket(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252245,
  "executionTime": 27
 }
]

[
 "TEST_STARTED",
 "ID#testSimple(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testSimple(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252272,
  "executionTime": 26
 }
]

[
 "TEST_STARTED",
 "ID#testOtherNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testOtherNonKeyed(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252299,
  "executionTime": 36
 }
]

[
 "TEST_STARTED",
 "ID#testEmptyFilterDeclarations(org.elasticsearch.search.aggregations.bucket.FiltersIT)"
]

[
 "TEST_FINISHED",
 {
  "description": "ID#testEmptyFilterDeclarations(org.elasticsearch.search.aggregations.bucket.FiltersIT)",
  "startTimestamp": 1459404252335,
  "executionTime": 65
 }
]

[
 "SUITE_COMPLETED",
 {
  "description": "ID#org.elasticsearch.search.aggregations.bucket.FiltersIT",
  "startTimestamp": 1459404248530,
  "executionTime": 6624
 }
]

[
 "SUITE_STARTED",
 {
  "description": {
   "id": "ID#org.elasticsearch.indexlifecycle.IndexLifecycleActionIT",
   "displayName": "org.elasticsearch.indexlifecycle.IndexLifecycleActionIT",
   "methodName": null,
   "className": "org.elasticsearch.indexlifecycle.IndexLifecycleActionIT",
   "children": [
    {
     "id": "ID#testIndexLifecycleActionsWith11Shards1Backup(org.elasticsearch.indexlifecycle.IndexLifecycleActionIT)",
     "displayName": "testIndexLifecycleActionsWith11Shards1Backup(org.elasticsearch.indexlifecycle.IndexLifecycleActionIT)",
     "methodName": "testIndexLifecycleActionsWith11Shards1Backup",
     "className": "org.elasticsearch.indexlifecycle.IndexLifecycleActionIT",
     "children": []
    }
   ]
  },
  "startTimestamp": 1459404255171
 }
]

[
 "TEST_STARTED",
 "ID#testIndexLifecycleActionsWith11Shards1Backup(org.elasticsearch.indexlifecycle.IndexLifecycleActionIT)"
]

